node {
  name: "dropout_rate"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "fingerprint_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1960
        }
      }
    }
  }
}
node {
  name: "Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\3771\000\000\000(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape"
  op: "Reshape"
  input: "fingerprint_input"
  input: "Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "first_weights/first_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@first_weights/first_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\036\000\000\000\n\000\000\000\001\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "first_weights/first_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@first_weights/first_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "first_weights/first_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@first_weights/first_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "first_weights/first_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "first_weights/first_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@first_weights/first_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "first_weights/first_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "first_weights/first_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "first_weights/first_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@first_weights/first_weights"
      }
    }
  }
}
node {
  name: "first_weights/first_weights/Initializer/truncated_normal"
  op: "Add"
  input: "first_weights/first_weights/Initializer/truncated_normal/mul"
  input: "first_weights/first_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@first_weights/first_weights"
      }
    }
  }
}
node {
  name: "first_weights/first_weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@first_weights/first_weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 30
        }
        dim {
          size: 10
        }
        dim {
          size: 1
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "first_weights/first_weights"
    }
  }
}
node {
  name: "first_weights/first_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "first_weights/first_weights"
}
node {
  name: "first_weights/first_weights/Assign"
  op: "AssignVariableOp"
  input: "first_weights/first_weights"
  input: "first_weights/first_weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "first_weights/first_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "first_weights/first_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "first_bias/first_bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@first_bias/first_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "first_bias/first_bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@first_bias/first_bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "first_bias/first_bias"
    }
  }
}
node {
  name: "first_bias/first_bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "first_bias/first_bias"
}
node {
  name: "first_bias/first_bias/Assign"
  op: "AssignVariableOp"
  input: "first_bias/first_bias"
  input: "first_bias/first_bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "first_bias/first_bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "first_bias/first_bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D/ReadVariableOp"
  op: "ReadVariableOp"
  input: "first_weights/first_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D"
  op: "Conv2D"
  input: "Reshape"
  input: "Conv2D/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add/ReadVariableOp"
  op: "ReadVariableOp"
  input: "first_bias/first_bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add"
  op: "AddV2"
  input: "Conv2D"
  input: "add/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu"
  op: "Relu"
  input: "add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout/Sub"
  op: "Sub"
  input: "dropout/Const"
  input: "dropout_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/RealDiv"
  op: "RealDiv"
  input: "Relu"
  input: "dropout/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/Shape"
  op: "Shape"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout/random_uniform/RandomUniform"
  input: "dropout_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout/Cast"
  op: "Cast"
  input: "dropout/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout/Mul"
  op: "Mul"
  input: "dropout/RealDiv"
  input: "dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MaxPool2d"
  op: "MaxPool"
  input: "dropout/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "second_weights/second_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@second_weights/second_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\017\000\000\000\005\000\000\000@\000\000\000@\000\000\000"
      }
    }
  }
}
node {
  name: "second_weights/second_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@second_weights/second_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "second_weights/second_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@second_weights/second_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "second_weights/second_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "second_weights/second_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@second_weights/second_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "second_weights/second_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "second_weights/second_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "second_weights/second_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@second_weights/second_weights"
      }
    }
  }
}
node {
  name: "second_weights/second_weights/Initializer/truncated_normal"
  op: "Add"
  input: "second_weights/second_weights/Initializer/truncated_normal/mul"
  input: "second_weights/second_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@second_weights/second_weights"
      }
    }
  }
}
node {
  name: "second_weights/second_weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@second_weights/second_weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 15
        }
        dim {
          size: 5
        }
        dim {
          size: 64
        }
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "second_weights/second_weights"
    }
  }
}
node {
  name: "second_weights/second_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "second_weights/second_weights"
}
node {
  name: "second_weights/second_weights/Assign"
  op: "AssignVariableOp"
  input: "second_weights/second_weights"
  input: "second_weights/second_weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "second_weights/second_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "second_weights/second_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "second_bias/second_bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@second_bias/second_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 64
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "second_bias/second_bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@second_bias/second_bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 64
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "second_bias/second_bias"
    }
  }
}
node {
  name: "second_bias/second_bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "second_bias/second_bias"
}
node {
  name: "second_bias/second_bias/Assign"
  op: "AssignVariableOp"
  input: "second_bias/second_bias"
  input: "second_bias/second_bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "second_bias/second_bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "second_bias/second_bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "second_weights/second_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_1"
  op: "Conv2D"
  input: "MaxPool2d"
  input: "Conv2D_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "second_bias/second_bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_1"
  op: "AddV2"
  input: "Conv2D_1"
  input: "add_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_1"
  op: "Relu"
  input: "add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_1/Sub"
  op: "Sub"
  input: "dropout_1/Const"
  input: "dropout_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/RealDiv"
  op: "RealDiv"
  input: "Relu_1"
  input: "dropout_1/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/Shape"
  op: "Shape"
  input: "Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_1/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_1/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_1/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_1/random_uniform/RandomUniform"
  input: "dropout_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_1/Cast"
  op: "Cast"
  input: "dropout_1/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_1/Mul"
  op: "Mul"
  input: "dropout_1/RealDiv"
  input: "dropout_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reshape_1/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000}\000\000"
      }
    }
  }
}
node {
  name: "Reshape_1"
  op: "Reshape"
  input: "dropout_1/Mul"
  input: "Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "softmax_weights/softmax_weights/Initializer/truncated_normal/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_weights/softmax_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000}\000\000&\000\000\000"
      }
    }
  }
}
node {
  name: "softmax_weights/softmax_weights/Initializer/truncated_normal/mean"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_weights/softmax_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_weights/softmax_weights/Initializer/truncated_normal/stddev"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_weights/softmax_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.009999999776482582
      }
    }
  }
}
node {
  name: "softmax_weights/softmax_weights/Initializer/truncated_normal/TruncatedNormal"
  op: "TruncatedNormal"
  input: "softmax_weights/softmax_weights/Initializer/truncated_normal/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_weights/softmax_weights"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "softmax_weights/softmax_weights/Initializer/truncated_normal/mul"
  op: "Mul"
  input: "softmax_weights/softmax_weights/Initializer/truncated_normal/TruncatedNormal"
  input: "softmax_weights/softmax_weights/Initializer/truncated_normal/stddev"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_weights/softmax_weights"
      }
    }
  }
}
node {
  name: "softmax_weights/softmax_weights/Initializer/truncated_normal"
  op: "Add"
  input: "softmax_weights/softmax_weights/Initializer/truncated_normal/mul"
  input: "softmax_weights/softmax_weights/Initializer/truncated_normal/mean"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_weights/softmax_weights"
      }
    }
  }
}
node {
  name: "softmax_weights/softmax_weights"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_weights/softmax_weights"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 32000
        }
        dim {
          size: 38
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "softmax_weights/softmax_weights"
    }
  }
}
node {
  name: "softmax_weights/softmax_weights/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "softmax_weights/softmax_weights"
}
node {
  name: "softmax_weights/softmax_weights/Assign"
  op: "AssignVariableOp"
  input: "softmax_weights/softmax_weights"
  input: "softmax_weights/softmax_weights/Initializer/truncated_normal"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "softmax_weights/softmax_weights/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "softmax_weights/softmax_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "softmax_bias/softmax_bias/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_bias/softmax_bias"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 38
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "softmax_bias/softmax_bias"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_bias/softmax_bias"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 38
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "softmax_bias/softmax_bias"
    }
  }
}
node {
  name: "softmax_bias/softmax_bias/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "softmax_bias/softmax_bias"
}
node {
  name: "softmax_bias/softmax_bias/Assign"
  op: "AssignVariableOp"
  input: "softmax_bias/softmax_bias"
  input: "softmax_bias/softmax_bias/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "softmax_bias/softmax_bias/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "softmax_bias/softmax_bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MatMul/ReadVariableOp"
  op: "ReadVariableOp"
  input: "softmax_weights/softmax_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MatMul"
  op: "MatMul"
  input: "Reshape_1"
  input: "MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "softmax_bias/softmax_bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_2"
  op: "AddV2"
  input: "MatMul"
  input: "add_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VarHandleOp"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "allowed_devices"
    value {
      list {
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: "global_step"
    }
  }
}
node {
  name: "global_step/IsInitialized/VarIsInitializedOp"
  op: "VarIsInitializedOp"
  input: "global_step"
}
node {
  name: "global_step/Assign"
  op: "AssignVariableOp"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "global_step/Read/ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "wav_name"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "reader_reader"
  op: "ReadFile"
  input: "wav_name"
}
node {
  name: "wav_decoder"
  op: "DecodeWav"
  input: "reader_reader"
  attr {
    key: "desired_channels"
    value {
      i: 1
    }
  }
  attr {
    key: "desired_samples"
    value {
      i: 16000
    }
  }
}
node {
  name: "Mul/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 32768.0
      }
    }
  }
}
node {
  name: "Mul"
  op: "Mul"
  input: "wav_decoder"
  input: "Mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Cast"
  op: "Cast"
  input: "Mul"
  attr {
    key: "DstT"
    value {
      type: DT_INT16
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Reshape_2/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Reshape_2"
  op: "Reshape"
  input: "Cast"
  input: "Reshape_2/shape"
  attr {
    key: "T"
    value {
      type: DT_INT16
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AudioMicrofrontend"
  op: "AudioMicrofrontend"
  input: "Reshape_2"
  attr {
    key: "enable_log"
    value {
      b: true
    }
  }
  attr {
    key: "enable_pcan"
    value {
      b: true
    }
  }
  attr {
    key: "even_smoothing"
    value {
      f: 0.02500000037252903
    }
  }
  attr {
    key: "frame_stride"
    value {
      i: 1
    }
  }
  attr {
    key: "gain_bits"
    value {
      i: 21
    }
  }
  attr {
    key: "left_context"
    value {
      i: 0
    }
  }
  attr {
    key: "lower_band_limit"
    value {
      f: 125.0
    }
  }
  attr {
    key: "min_signal_remaining"
    value {
      f: 0.05000000074505806
    }
  }
  attr {
    key: "num_channels"
    value {
      i: 40
    }
  }
  attr {
    key: "odd_smoothing"
    value {
      f: 0.05999999865889549
    }
  }
  attr {
    key: "out_scale"
    value {
      i: 1
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "pcan_offset"
    value {
      f: 80.0
    }
  }
  attr {
    key: "pcan_strength"
    value {
      f: 0.949999988079071
    }
  }
  attr {
    key: "right_context"
    value {
      i: 0
    }
  }
  attr {
    key: "sample_rate"
    value {
      i: 16000
    }
  }
  attr {
    key: "scale_shift"
    value {
      i: 6
    }
  }
  attr {
    key: "smoothing_bits"
    value {
      i: 10
    }
  }
  attr {
    key: "upper_band_limit"
    value {
      f: 7500.0
    }
  }
  attr {
    key: "window_size"
    value {
      i: 30
    }
  }
  attr {
    key: "window_step"
    value {
      i: 20
    }
  }
  attr {
    key: "zero_padding"
    value {
      b: false
    }
  }
}
node {
  name: "Mul_1/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0390625
      }
    }
  }
}
node {
  name: "Mul_1"
  op: "Mul"
  input: "AudioMicrofrontend"
  input: "Mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "groundtruth_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/Shape"
  op: "Shape"
  input: "groundtruth_input"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "add_2"
  input: "groundtruth_input"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Const_1"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Sum"
  op: "Sum"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Mul"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Equal/y"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Equal"
  op: "Equal"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Const"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/zeros_like"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like/Shape"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like"
  op: "Fill"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like/Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Select"
  op: "Select"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Equal"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/zeros_like"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Select"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Const"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present"
  op: "Sum"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Rank"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/range/start"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/range/delta"
  op: "Const"
  input: "^cross_entropy/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/range"
  op: "Range"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/range/start"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Rank"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1"
  op: "Sum"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Sum"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy/sparse_softmax_cross_entropy_loss/value"
  op: "DivNoNan"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "learning_rate_input"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "gradients/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients/Fill"
  op: "Fill"
  input: "gradients/Shape"
  input: "gradients/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Shape"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "gradients/Fill"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Sum"
  op: "Sum"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
  op: "Reshape"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Sum"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Neg"
  op: "Neg"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Neg"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_1"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/mul"
  op: "Mul"
  input: "gradients/Fill"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Sum_1"
  op: "Sum"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/mul"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Sum_1"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
  input: "^gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
  input: "^gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
  input: "^gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_1_grad/Tile"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Shape"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  op: "Tile"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Shape"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/zeros_like"
  op: "ZerosLike"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  op: "Mul"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  input: "cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/add_2_grad/Shape"
  op: "Shape"
  input: "MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_2_grad/Shape_1"
  op: "Shape"
  input: "add_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_2_grad/Shape"
  input: "gradients/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_2_grad/Sum"
  op: "Sum"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "gradients/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_2_grad/Sum"
  input: "gradients/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients/cross_entropy/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "gradients/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_2_grad/Sum_1"
  input: "gradients/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_2_grad/Reshape"
  input: "^gradients/add_2_grad/Reshape_1"
}
node {
  name: "gradients/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_2_grad/Reshape"
  input: "^gradients/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_2_grad/Reshape_1"
  input: "^gradients/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients/add_2_grad/tuple/control_dependency"
  input: "MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reshape_1"
  input: "gradients/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/MatMul_grad/MatMul"
  input: "^gradients/MatMul_grad/MatMul_1"
}
node {
  name: "gradients/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/MatMul_grad/MatMul"
  input: "^gradients/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/MatMul_grad/MatMul_1"
  input: "^gradients/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients/Reshape_1_grad/Shape"
  op: "Shape"
  input: "dropout_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/MatMul_grad/tuple/control_dependency"
  input: "gradients/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_1/Mul_grad/Shape"
  op: "Shape"
  input: "dropout_1/RealDiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_1/Mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_1/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dropout_1/Mul_grad/Shape"
  input: "gradients/dropout_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_1/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/Reshape_1_grad/Reshape"
  input: "dropout_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout_1/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/dropout_1/Mul_grad/Mul"
  input: "gradients/dropout_1/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dropout_1/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/dropout_1/Mul_grad/Sum"
  input: "gradients/dropout_1/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_1/Mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_1/RealDiv"
  input: "gradients/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout_1/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/dropout_1/Mul_grad/Mul_1"
  input: "gradients/dropout_1/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dropout_1/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dropout_1/Mul_grad/Sum_1"
  input: "gradients/dropout_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_1/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dropout_1/Mul_grad/Reshape"
  input: "^gradients/dropout_1/Mul_grad/Reshape_1"
}
node {
  name: "gradients/dropout_1/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dropout_1/Mul_grad/Reshape"
  input: "^gradients/dropout_1/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dropout_1/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dropout_1/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dropout_1/Mul_grad/Reshape_1"
  input: "^gradients/dropout_1/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dropout_1/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/Shape"
  op: "Shape"
  input: "Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/Shape_1"
  op: "Shape"
  input: "dropout_1/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dropout_1/RealDiv_grad/Shape"
  input: "gradients/dropout_1/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/dropout_1/Mul_grad/tuple/control_dependency"
  input: "dropout_1/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/Sum"
  op: "Sum"
  input: "gradients/dropout_1/RealDiv_grad/RealDiv"
  input: "gradients/dropout_1/RealDiv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/Reshape"
  op: "Reshape"
  input: "gradients/dropout_1/RealDiv_grad/Sum"
  input: "gradients/dropout_1/RealDiv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/Neg"
  op: "Neg"
  input: "Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/dropout_1/RealDiv_grad/Neg"
  input: "dropout_1/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/dropout_1/RealDiv_grad/RealDiv_1"
  input: "dropout_1/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/mul"
  op: "Mul"
  input: "gradients/dropout_1/Mul_grad/tuple/control_dependency"
  input: "gradients/dropout_1/RealDiv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/Sum_1"
  op: "Sum"
  input: "gradients/dropout_1/RealDiv_grad/mul"
  input: "gradients/dropout_1/RealDiv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dropout_1/RealDiv_grad/Sum_1"
  input: "gradients/dropout_1/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dropout_1/RealDiv_grad/Reshape"
  input: "^gradients/dropout_1/RealDiv_grad/Reshape_1"
}
node {
  name: "gradients/dropout_1/RealDiv_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dropout_1/RealDiv_grad/Reshape"
  input: "^gradients/dropout_1/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dropout_1/RealDiv_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dropout_1/RealDiv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dropout_1/RealDiv_grad/Reshape_1"
  input: "^gradients/dropout_1/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dropout_1/RealDiv_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/dropout_1/RealDiv_grad/tuple/control_dependency"
  input: "Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/add_1_grad/Shape"
  op: "Shape"
  input: "Conv2D_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_1_grad/Shape_1"
  op: "Shape"
  input: "add_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_1_grad/Shape"
  input: "gradients/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_1_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_1_grad/ReluGrad"
  input: "gradients/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_1_grad/Sum"
  input: "gradients/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients/Relu_1_grad/ReluGrad"
  input: "gradients/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_1_grad/Sum_1"
  input: "gradients/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_1_grad/Reshape"
  input: "^gradients/add_1_grad/Reshape_1"
}
node {
  name: "gradients/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_1_grad/Reshape"
  input: "^gradients/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_1_grad/Reshape_1"
  input: "^gradients/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Conv2D_1_grad/ShapeN"
  op: "ShapeN"
  input: "MaxPool2d"
  input: "Conv2D_1/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_1_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_1_grad/ShapeN"
  input: "Conv2D_1/ReadVariableOp"
  input: "gradients/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_1_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MaxPool2d"
  input: "gradients/Conv2D_1_grad/ShapeN:1"
  input: "gradients/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_1_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_1_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_1_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Conv2D_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_1_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients/MaxPool2d_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "dropout/Mul"
  input: "MaxPool2d"
  input: "gradients/Conv2D_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients/dropout/Mul_grad/Shape"
  op: "Shape"
  input: "dropout/RealDiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout/Mul_grad/Shape_1"
  op: "Shape"
  input: "dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dropout/Mul_grad/Shape"
  input: "gradients/dropout/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout/Mul_grad/Mul"
  op: "Mul"
  input: "gradients/MaxPool2d_grad/MaxPoolGrad"
  input: "dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout/Mul_grad/Sum"
  op: "Sum"
  input: "gradients/dropout/Mul_grad/Mul"
  input: "gradients/dropout/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dropout/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients/dropout/Mul_grad/Sum"
  input: "gradients/dropout/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout/Mul_grad/Mul_1"
  op: "Mul"
  input: "dropout/RealDiv"
  input: "gradients/MaxPool2d_grad/MaxPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients/dropout/Mul_grad/Mul_1"
  input: "gradients/dropout/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dropout/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dropout/Mul_grad/Sum_1"
  input: "gradients/dropout/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dropout/Mul_grad/Reshape"
  input: "^gradients/dropout/Mul_grad/Reshape_1"
}
node {
  name: "gradients/dropout/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dropout/Mul_grad/Reshape"
  input: "^gradients/dropout/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dropout/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dropout/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dropout/Mul_grad/Reshape_1"
  input: "^gradients/dropout/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dropout/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/dropout/RealDiv_grad/Shape"
  op: "Shape"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout/RealDiv_grad/Shape_1"
  op: "Shape"
  input: "dropout/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout/RealDiv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/dropout/RealDiv_grad/Shape"
  input: "gradients/dropout/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout/RealDiv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients/dropout/Mul_grad/tuple/control_dependency"
  input: "dropout/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout/RealDiv_grad/Sum"
  op: "Sum"
  input: "gradients/dropout/RealDiv_grad/RealDiv"
  input: "gradients/dropout/RealDiv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dropout/RealDiv_grad/Reshape"
  op: "Reshape"
  input: "gradients/dropout/RealDiv_grad/Sum"
  input: "gradients/dropout/RealDiv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout/RealDiv_grad/Neg"
  op: "Neg"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout/RealDiv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients/dropout/RealDiv_grad/Neg"
  input: "dropout/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout/RealDiv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients/dropout/RealDiv_grad/RealDiv_1"
  input: "dropout/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout/RealDiv_grad/mul"
  op: "Mul"
  input: "gradients/dropout/Mul_grad/tuple/control_dependency"
  input: "gradients/dropout/RealDiv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/dropout/RealDiv_grad/Sum_1"
  op: "Sum"
  input: "gradients/dropout/RealDiv_grad/mul"
  input: "gradients/dropout/RealDiv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/dropout/RealDiv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/dropout/RealDiv_grad/Sum_1"
  input: "gradients/dropout/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/dropout/RealDiv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/dropout/RealDiv_grad/Reshape"
  input: "^gradients/dropout/RealDiv_grad/Reshape_1"
}
node {
  name: "gradients/dropout/RealDiv_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/dropout/RealDiv_grad/Reshape"
  input: "^gradients/dropout/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dropout/RealDiv_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/dropout/RealDiv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/dropout/RealDiv_grad/Reshape_1"
  input: "^gradients/dropout/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/dropout/RealDiv_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients/dropout/RealDiv_grad/tuple/control_dependency"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients/add_grad/Shape"
  op: "Shape"
  input: "Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/Shape_1"
  op: "Shape"
  input: "add/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients/add_grad/Shape"
  input: "gradients/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/Sum"
  op: "Sum"
  input: "gradients/Relu_grad/ReluGrad"
  input: "gradients/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_grad/Reshape"
  op: "Reshape"
  input: "gradients/add_grad/Sum"
  input: "gradients/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/Sum_1"
  op: "Sum"
  input: "gradients/Relu_grad/ReluGrad"
  input: "gradients/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients/add_grad/Sum_1"
  input: "gradients/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/add_grad/Reshape"
  input: "^gradients/add_grad/Reshape_1"
}
node {
  name: "gradients/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/add_grad/Reshape"
  input: "^gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/add_grad/Reshape_1"
  input: "^gradients/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Reshape"
  input: "Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients/Conv2D_grad/ShapeN"
  input: "Conv2D/ReadVariableOp"
  input: "gradients/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Reshape"
  input: "gradients/Conv2D_grad/ShapeN:1"
  input: "gradients/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "GradientDescent/update_first_weights/first_weights/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "first_weights/first_weights"
  input: "learning_rate_input"
  input: "gradients/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@first_weights/first_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_first_bias/first_bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "first_bias/first_bias"
  input: "learning_rate_input"
  input: "gradients/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@first_bias/first_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_second_weights/second_weights/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "second_weights/second_weights"
  input: "learning_rate_input"
  input: "gradients/Conv2D_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@second_weights/second_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_second_bias/second_bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "second_bias/second_bias"
  input: "learning_rate_input"
  input: "gradients/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@second_bias/second_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_softmax_weights/softmax_weights/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "softmax_weights/softmax_weights"
  input: "learning_rate_input"
  input: "gradients/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_weights/softmax_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent/update_softmax_bias/softmax_bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "softmax_bias/softmax_bias"
  input: "learning_rate_input"
  input: "gradients/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_bias/softmax_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent"
  op: "NoOp"
  input: "^GradientDescent/update_first_bias/first_bias/ResourceApplyGradientDescent"
  input: "^GradientDescent/update_first_weights/first_weights/ResourceApplyGradientDescent"
  input: "^GradientDescent/update_second_bias/second_bias/ResourceApplyGradientDescent"
  input: "^GradientDescent/update_second_weights/second_weights/ResourceApplyGradientDescent"
  input: "^GradientDescent/update_softmax_bias/softmax_bias/ResourceApplyGradientDescent"
  input: "^GradientDescent/update_softmax_weights/softmax_weights/ResourceApplyGradientDescent"
}
node {
  name: "ArgMax/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax"
  op: "ArgMax"
  input: "add_2"
  input: "ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Equal"
  op: "Equal"
  input: "ArgMax"
  input: "groundtruth_input"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "Cast_1"
  op: "Cast"
  input: "Equal"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean"
  op: "Mean"
  input: "Cast_1"
  input: "Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "save/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/filename"
  op: "PlaceholderWithDefault"
  input: "save/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/Const"
  op: "PlaceholderWithDefault"
  input: "save/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: "first_bias/first_bias"
        string_val: "first_weights/first_weights"
        string_val: "global_step"
        string_val: "second_bias/second_bias"
        string_val: "second_weights/second_weights"
        string_val: "softmax_bias/softmax_bias"
        string_val: "softmax_weights/softmax_weights"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/Const"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "first_bias/first_bias/Read/ReadVariableOp"
  input: "first_weights/first_weights/Read/ReadVariableOp"
  input: "global_step/Read/ReadVariableOp"
  input: "second_bias/second_bias/Read/ReadVariableOp"
  input: "second_weights/second_weights/Read/ReadVariableOp"
  input: "softmax_bias/softmax_bias/Read/ReadVariableOp"
  input: "softmax_weights/softmax_weights/Read/ReadVariableOp"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/Const"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/Const"
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: "first_bias/first_bias"
        string_val: "first_weights/first_weights"
        string_val: "global_step"
        string_val: "second_bias/second_bias"
        string_val: "second_weights/second_weights"
        string_val: "softmax_bias/softmax_bias"
        string_val: "softmax_weights/softmax_weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp"
  op: "AssignVariableOp"
  input: "first_bias/first_bias"
  input: "save/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_1"
  op: "Identity"
  input: "save/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "first_weights/first_weights"
  input: "save/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_2"
  op: "Identity"
  input: "save/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "global_step"
  input: "save/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save/Identity_3"
  op: "Identity"
  input: "save/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "second_bias/second_bias"
  input: "save/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_4"
  op: "Identity"
  input: "save/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "second_weights/second_weights"
  input: "save/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_5"
  op: "Identity"
  input: "save/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "softmax_bias/softmax_bias"
  input: "save/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/Identity_6"
  op: "Identity"
  input: "save/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "softmax_weights/softmax_weights"
  input: "save/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/AssignVariableOp"
  input: "^save/AssignVariableOp_1"
  input: "^save/AssignVariableOp_2"
  input: "^save/AssignVariableOp_3"
  input: "^save/AssignVariableOp_4"
  input: "^save/AssignVariableOp_5"
  input: "^save/AssignVariableOp_6"
}
node {
  name: "init"
  op: "NoOp"
  input: "^first_bias/first_bias/Assign"
  input: "^first_weights/first_weights/Assign"
  input: "^global_step/Assign"
  input: "^second_bias/second_bias/Assign"
  input: "^second_weights/second_weights/Assign"
  input: "^softmax_bias/softmax_bias/Assign"
  input: "^softmax_weights/softmax_weights/Assign"
}
node {
  name: "ReadVariableOp"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "add_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "add_3"
  op: "AddV2"
  input: "ReadVariableOp"
  input: "add_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "AssignVariableOp"
  op: "AssignVariableOp"
  input: "global_step"
  input: "add_3"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "ReadVariableOp_1"
  op: "ReadVariableOp"
  input: "global_step"
  input: "^AssignVariableOp"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "groundtruth_input_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/xentropy/Shape"
  op: "Shape"
  input: "groundtruth_input_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "add_2"
  input: "groundtruth_input_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/Const"
  input: "^cross_entropy_1/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/Const_1"
  op: "Const"
  input: "^cross_entropy_1/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/Sum"
  op: "Sum"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/Equal/y"
  op: "Const"
  input: "^cross_entropy_1/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/Equal"
  op: "Equal"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/Const"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/zeros_like"
  op: "Const"
  input: "^cross_entropy_1/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/ones_like/Shape"
  op: "Const"
  input: "^cross_entropy_1/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^cross_entropy_1/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/ones_like"
  op: "Fill"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/ones_like/Shape"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/Select"
  op: "Select"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/Equal"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/zeros_like"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^cross_entropy_1/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^cross_entropy_1/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "^cross_entropy_1/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^cross_entropy_1/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^cross_entropy_1/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "^cross_entropy_1/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^cross_entropy_1/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/Select"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/Const"
  op: "Const"
  input: "^cross_entropy_1/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present"
  op: "Sum"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/Rank"
  op: "Const"
  input: "^cross_entropy_1/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/range/start"
  op: "Const"
  input: "^cross_entropy_1/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/range/delta"
  op: "Const"
  input: "^cross_entropy_1/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/range"
  op: "Range"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/range/start"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/Rank"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/Sum_1"
  op: "Sum"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/Sum"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy_1/sparse_softmax_cross_entropy_loss/value"
  op: "DivNoNan"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/Sum_1"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "learning_rate_input_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "gradients_1/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients_1/Fill"
  op: "Fill"
  input: "gradients_1/Shape"
  input: "gradients_1/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/Shape"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "gradients_1/Fill"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/Sum"
  op: "Sum"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/Sum"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/Neg"
  op: "Neg"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/Neg"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_1"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/mul"
  op: "Mul"
  input: "gradients_1/Fill"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/mul"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/Sum_1"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
  input: "^gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
  input: "^gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
  input: "^gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Sum_1_grad/Tile"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Sum_grad/Shape"
  op: "Shape"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  op: "Tile"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  op: "Shape"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Shape"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/zeros_like"
  op: "ZerosLike"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  op: "Mul"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  input: "cross_entropy_1/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/add_2_grad/Shape"
  op: "Shape"
  input: "MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/add_2_grad/Shape_1"
  op: "Shape"
  input: "add_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/add_2_grad/Shape"
  input: "gradients_1/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/add_2_grad/Sum"
  op: "Sum"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "gradients_1/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/add_2_grad/Sum"
  input: "gradients_1/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/cross_entropy_1/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "gradients_1/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/add_2_grad/Sum_1"
  input: "gradients_1/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/add_2_grad/Reshape"
  input: "^gradients_1/add_2_grad/Reshape_1"
}
node {
  name: "gradients_1/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/add_2_grad/Reshape"
  input: "^gradients_1/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/add_2_grad/Reshape_1"
  input: "^gradients_1/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_1/add_2_grad/tuple/control_dependency"
  input: "MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reshape_1"
  input: "gradients_1/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/MatMul_grad/MatMul"
  input: "^gradients_1/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_1/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/MatMul_grad/MatMul"
  input: "^gradients_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients_1/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/MatMul_grad/MatMul_1"
  input: "^gradients_1/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients_1/Reshape_1_grad/Shape"
  op: "Shape"
  input: "dropout_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/MatMul_grad/tuple/control_dependency"
  input: "gradients_1/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dropout_1/Mul_grad/Shape"
  op: "Shape"
  input: "dropout_1/RealDiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dropout_1/Mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dropout_1/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dropout_1/Mul_grad/Shape"
  input: "gradients_1/dropout_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dropout_1/Mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/Reshape_1_grad/Reshape"
  input: "dropout_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dropout_1/Mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/dropout_1/Mul_grad/Mul"
  input: "gradients_1/dropout_1/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dropout_1/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dropout_1/Mul_grad/Sum"
  input: "gradients_1/dropout_1/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dropout_1/Mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_1/RealDiv"
  input: "gradients_1/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dropout_1/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/dropout_1/Mul_grad/Mul_1"
  input: "gradients_1/dropout_1/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dropout_1/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dropout_1/Mul_grad/Sum_1"
  input: "gradients_1/dropout_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dropout_1/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dropout_1/Mul_grad/Reshape"
  input: "^gradients_1/dropout_1/Mul_grad/Reshape_1"
}
node {
  name: "gradients_1/dropout_1/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dropout_1/Mul_grad/Reshape"
  input: "^gradients_1/dropout_1/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dropout_1/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dropout_1/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dropout_1/Mul_grad/Reshape_1"
  input: "^gradients_1/dropout_1/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dropout_1/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/dropout_1/RealDiv_grad/Shape"
  op: "Shape"
  input: "Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dropout_1/RealDiv_grad/Shape_1"
  op: "Shape"
  input: "dropout_1/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dropout_1/RealDiv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dropout_1/RealDiv_grad/Shape"
  input: "gradients_1/dropout_1/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dropout_1/RealDiv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients_1/dropout_1/Mul_grad/tuple/control_dependency"
  input: "dropout_1/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dropout_1/RealDiv_grad/Sum"
  op: "Sum"
  input: "gradients_1/dropout_1/RealDiv_grad/RealDiv"
  input: "gradients_1/dropout_1/RealDiv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dropout_1/RealDiv_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dropout_1/RealDiv_grad/Sum"
  input: "gradients_1/dropout_1/RealDiv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dropout_1/RealDiv_grad/Neg"
  op: "Neg"
  input: "Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dropout_1/RealDiv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients_1/dropout_1/RealDiv_grad/Neg"
  input: "dropout_1/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dropout_1/RealDiv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients_1/dropout_1/RealDiv_grad/RealDiv_1"
  input: "dropout_1/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dropout_1/RealDiv_grad/mul"
  op: "Mul"
  input: "gradients_1/dropout_1/Mul_grad/tuple/control_dependency"
  input: "gradients_1/dropout_1/RealDiv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dropout_1/RealDiv_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/dropout_1/RealDiv_grad/mul"
  input: "gradients_1/dropout_1/RealDiv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dropout_1/RealDiv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dropout_1/RealDiv_grad/Sum_1"
  input: "gradients_1/dropout_1/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dropout_1/RealDiv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dropout_1/RealDiv_grad/Reshape"
  input: "^gradients_1/dropout_1/RealDiv_grad/Reshape_1"
}
node {
  name: "gradients_1/dropout_1/RealDiv_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dropout_1/RealDiv_grad/Reshape"
  input: "^gradients_1/dropout_1/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dropout_1/RealDiv_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dropout_1/RealDiv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dropout_1/RealDiv_grad/Reshape_1"
  input: "^gradients_1/dropout_1/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dropout_1/RealDiv_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/dropout_1/RealDiv_grad/tuple/control_dependency"
  input: "Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/add_1_grad/Shape"
  op: "Shape"
  input: "Conv2D_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/add_1_grad/Shape_1"
  op: "Shape"
  input: "add_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/add_1_grad/Shape"
  input: "gradients_1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/add_1_grad/Sum"
  op: "Sum"
  input: "gradients_1/Relu_1_grad/ReluGrad"
  input: "gradients_1/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/add_1_grad/Sum"
  input: "gradients_1/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/Relu_1_grad/ReluGrad"
  input: "gradients_1/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/add_1_grad/Sum_1"
  input: "gradients_1/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/add_1_grad/Reshape"
  input: "^gradients_1/add_1_grad/Reshape_1"
}
node {
  name: "gradients_1/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/add_1_grad/Reshape"
  input: "^gradients_1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/add_1_grad/Reshape_1"
  input: "^gradients_1/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/Conv2D_1_grad/ShapeN"
  op: "ShapeN"
  input: "MaxPool2d"
  input: "Conv2D_1/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/Conv2D_1_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_1/Conv2D_1_grad/ShapeN"
  input: "Conv2D_1/ReadVariableOp"
  input: "gradients_1/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/Conv2D_1_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MaxPool2d"
  input: "gradients_1/Conv2D_1_grad/ShapeN:1"
  input: "gradients_1/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/Conv2D_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^gradients_1/Conv2D_1_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_1/Conv2D_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/Conv2D_1_grad/Conv2DBackpropInput"
  input: "^gradients_1/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/Conv2D_1_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients_1/Conv2D_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^gradients_1/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/Conv2D_1_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients_1/MaxPool2d_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "dropout/Mul"
  input: "MaxPool2d"
  input: "gradients_1/Conv2D_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients_1/dropout/Mul_grad/Shape"
  op: "Shape"
  input: "dropout/RealDiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dropout/Mul_grad/Shape_1"
  op: "Shape"
  input: "dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dropout/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dropout/Mul_grad/Shape"
  input: "gradients_1/dropout/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dropout/Mul_grad/Mul"
  op: "Mul"
  input: "gradients_1/MaxPool2d_grad/MaxPoolGrad"
  input: "dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dropout/Mul_grad/Sum"
  op: "Sum"
  input: "gradients_1/dropout/Mul_grad/Mul"
  input: "gradients_1/dropout/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dropout/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dropout/Mul_grad/Sum"
  input: "gradients_1/dropout/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dropout/Mul_grad/Mul_1"
  op: "Mul"
  input: "dropout/RealDiv"
  input: "gradients_1/MaxPool2d_grad/MaxPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dropout/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/dropout/Mul_grad/Mul_1"
  input: "gradients_1/dropout/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dropout/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dropout/Mul_grad/Sum_1"
  input: "gradients_1/dropout/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dropout/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dropout/Mul_grad/Reshape"
  input: "^gradients_1/dropout/Mul_grad/Reshape_1"
}
node {
  name: "gradients_1/dropout/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dropout/Mul_grad/Reshape"
  input: "^gradients_1/dropout/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dropout/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dropout/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dropout/Mul_grad/Reshape_1"
  input: "^gradients_1/dropout/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dropout/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/dropout/RealDiv_grad/Shape"
  op: "Shape"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dropout/RealDiv_grad/Shape_1"
  op: "Shape"
  input: "dropout/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dropout/RealDiv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/dropout/RealDiv_grad/Shape"
  input: "gradients_1/dropout/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dropout/RealDiv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients_1/dropout/Mul_grad/tuple/control_dependency"
  input: "dropout/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dropout/RealDiv_grad/Sum"
  op: "Sum"
  input: "gradients_1/dropout/RealDiv_grad/RealDiv"
  input: "gradients_1/dropout/RealDiv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dropout/RealDiv_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/dropout/RealDiv_grad/Sum"
  input: "gradients_1/dropout/RealDiv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dropout/RealDiv_grad/Neg"
  op: "Neg"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dropout/RealDiv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients_1/dropout/RealDiv_grad/Neg"
  input: "dropout/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dropout/RealDiv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients_1/dropout/RealDiv_grad/RealDiv_1"
  input: "dropout/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dropout/RealDiv_grad/mul"
  op: "Mul"
  input: "gradients_1/dropout/Mul_grad/tuple/control_dependency"
  input: "gradients_1/dropout/RealDiv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/dropout/RealDiv_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/dropout/RealDiv_grad/mul"
  input: "gradients_1/dropout/RealDiv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/dropout/RealDiv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/dropout/RealDiv_grad/Sum_1"
  input: "gradients_1/dropout/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/dropout/RealDiv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/dropout/RealDiv_grad/Reshape"
  input: "^gradients_1/dropout/RealDiv_grad/Reshape_1"
}
node {
  name: "gradients_1/dropout/RealDiv_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/dropout/RealDiv_grad/Reshape"
  input: "^gradients_1/dropout/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dropout/RealDiv_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/dropout/RealDiv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/dropout/RealDiv_grad/Reshape_1"
  input: "^gradients_1/dropout/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/dropout/RealDiv_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_1/dropout/RealDiv_grad/tuple/control_dependency"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_1/add_grad/Shape"
  op: "Shape"
  input: "Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/add_grad/Shape_1"
  op: "Shape"
  input: "add/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_1/add_grad/Shape"
  input: "gradients_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/add_grad/Sum"
  op: "Sum"
  input: "gradients_1/Relu_grad/ReluGrad"
  input: "gradients_1/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_1/add_grad/Sum"
  input: "gradients_1/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/add_grad/Sum_1"
  op: "Sum"
  input: "gradients_1/Relu_grad/ReluGrad"
  input: "gradients_1/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_1/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_1/add_grad/Sum_1"
  input: "gradients_1/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/add_grad/Reshape"
  input: "^gradients_1/add_grad/Reshape_1"
}
node {
  name: "gradients_1/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/add_grad/Reshape"
  input: "^gradients_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_1/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/add_grad/Reshape_1"
  input: "^gradients_1/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_1/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Reshape"
  input: "Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_1/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_1/Conv2D_grad/ShapeN"
  input: "Conv2D/ReadVariableOp"
  input: "gradients_1/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Reshape"
  input: "gradients_1/Conv2D_grad/ShapeN:1"
  input: "gradients_1/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_1/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients_1/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_1/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_1/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients_1/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_1/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients_1/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_1/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "GradientDescent_1/update_first_weights/first_weights/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "first_weights/first_weights"
  input: "learning_rate_input_1"
  input: "gradients_1/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@first_weights/first_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_1/update_first_bias/first_bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "first_bias/first_bias"
  input: "learning_rate_input_1"
  input: "gradients_1/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@first_bias/first_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_1/update_second_weights/second_weights/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "second_weights/second_weights"
  input: "learning_rate_input_1"
  input: "gradients_1/Conv2D_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@second_weights/second_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_1/update_second_bias/second_bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "second_bias/second_bias"
  input: "learning_rate_input_1"
  input: "gradients_1/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@second_bias/second_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_1/update_softmax_weights/softmax_weights/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "softmax_weights/softmax_weights"
  input: "learning_rate_input_1"
  input: "gradients_1/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_weights/softmax_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_1/update_softmax_bias/softmax_bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "softmax_bias/softmax_bias"
  input: "learning_rate_input_1"
  input: "gradients_1/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_bias/softmax_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_1"
  op: "NoOp"
  input: "^GradientDescent_1/update_first_bias/first_bias/ResourceApplyGradientDescent"
  input: "^GradientDescent_1/update_first_weights/first_weights/ResourceApplyGradientDescent"
  input: "^GradientDescent_1/update_second_bias/second_bias/ResourceApplyGradientDescent"
  input: "^GradientDescent_1/update_second_weights/second_weights/ResourceApplyGradientDescent"
  input: "^GradientDescent_1/update_softmax_bias/softmax_bias/ResourceApplyGradientDescent"
  input: "^GradientDescent_1/update_softmax_weights/softmax_weights/ResourceApplyGradientDescent"
}
node {
  name: "ArgMax_1/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax_1"
  op: "ArgMax"
  input: "add_2"
  input: "ArgMax_1/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Equal_1"
  op: "Equal"
  input: "ArgMax_1"
  input: "groundtruth_input_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "Cast_2"
  op: "Cast"
  input: "Equal_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Const_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_1"
  op: "Mean"
  input: "Cast_2"
  input: "Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "save_1/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_1/filename"
  op: "PlaceholderWithDefault"
  input: "save_1/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_1/Const"
  op: "PlaceholderWithDefault"
  input: "save_1/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_1/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: "first_bias/first_bias"
        string_val: "first_weights/first_weights"
        string_val: "global_step"
        string_val: "second_bias/second_bias"
        string_val: "second_weights/second_weights"
        string_val: "softmax_bias/softmax_bias"
        string_val: "softmax_weights/softmax_weights"
      }
    }
  }
}
node {
  name: "save_1/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/SaveV2"
  op: "SaveV2"
  input: "save_1/Const"
  input: "save_1/SaveV2/tensor_names"
  input: "save_1/SaveV2/shape_and_slices"
  input: "first_bias/first_bias/Read/ReadVariableOp"
  input: "first_weights/first_weights/Read/ReadVariableOp"
  input: "global_step/Read/ReadVariableOp"
  input: "second_bias/second_bias/Read/ReadVariableOp"
  input: "second_weights/second_weights/Read/ReadVariableOp"
  input: "softmax_bias/softmax_bias/Read/ReadVariableOp"
  input: "softmax_weights/softmax_weights/Read/ReadVariableOp"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/control_dependency"
  op: "Identity"
  input: "save_1/Const"
  input: "^save_1/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_1/Const"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: "first_bias/first_bias"
        string_val: "first_weights/first_weights"
        string_val: "global_step"
        string_val: "second_bias/second_bias"
        string_val: "second_weights/second_weights"
        string_val: "softmax_bias/softmax_bias"
        string_val: "softmax_weights/softmax_weights"
      }
    }
  }
}
node {
  name: "save_1/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_1/RestoreV2"
  op: "RestoreV2"
  input: "save_1/Const"
  input: "save_1/RestoreV2/tensor_names"
  input: "save_1/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_1/Identity"
  op: "Identity"
  input: "save_1/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp"
  op: "AssignVariableOp"
  input: "first_bias/first_bias"
  input: "save_1/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_1"
  op: "Identity"
  input: "save_1/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "first_weights/first_weights"
  input: "save_1/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_2"
  op: "Identity"
  input: "save_1/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save_1/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "global_step"
  input: "save_1/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save_1/Identity_3"
  op: "Identity"
  input: "save_1/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "second_bias/second_bias"
  input: "save_1/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_4"
  op: "Identity"
  input: "save_1/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "second_weights/second_weights"
  input: "save_1/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_5"
  op: "Identity"
  input: "save_1/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "softmax_bias/softmax_bias"
  input: "save_1/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/Identity_6"
  op: "Identity"
  input: "save_1/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "softmax_weights/softmax_weights"
  input: "save_1/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_1/restore_all"
  op: "NoOp"
  input: "^save_1/AssignVariableOp"
  input: "^save_1/AssignVariableOp_1"
  input: "^save_1/AssignVariableOp_2"
  input: "^save_1/AssignVariableOp_3"
  input: "^save_1/AssignVariableOp_4"
  input: "^save_1/AssignVariableOp_5"
  input: "^save_1/AssignVariableOp_6"
}
node {
  name: "init_1"
  op: "NoOp"
  input: "^first_bias/first_bias/Assign"
  input: "^first_weights/first_weights/Assign"
  input: "^global_step/Assign"
  input: "^second_bias/second_bias/Assign"
  input: "^second_weights/second_weights/Assign"
  input: "^softmax_bias/softmax_bias/Assign"
  input: "^softmax_weights/softmax_weights/Assign"
}
node {
  name: "ReadVariableOp_2"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "add_4/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "add_4"
  op: "AddV2"
  input: "ReadVariableOp_2"
  input: "add_4/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "global_step"
  input: "add_4"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "ReadVariableOp_3"
  op: "ReadVariableOp"
  input: "global_step"
  input: "^AssignVariableOp_1"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save_2/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_2/filename"
  op: "PlaceholderWithDefault"
  input: "save_2/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_2/Const"
  op: "PlaceholderWithDefault"
  input: "save_2/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_2/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: "first_bias/first_bias"
        string_val: "first_weights/first_weights"
        string_val: "global_step"
        string_val: "second_bias/second_bias"
        string_val: "second_weights/second_weights"
        string_val: "softmax_bias/softmax_bias"
        string_val: "softmax_weights/softmax_weights"
      }
    }
  }
}
node {
  name: "save_2/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_2/SaveV2"
  op: "SaveV2"
  input: "save_2/Const"
  input: "save_2/SaveV2/tensor_names"
  input: "save_2/SaveV2/shape_and_slices"
  input: "first_bias/first_bias/Read/ReadVariableOp"
  input: "first_weights/first_weights/Read/ReadVariableOp"
  input: "global_step/Read/ReadVariableOp"
  input: "second_bias/second_bias/Read/ReadVariableOp"
  input: "second_weights/second_weights/Read/ReadVariableOp"
  input: "softmax_bias/softmax_bias/Read/ReadVariableOp"
  input: "softmax_weights/softmax_weights/Read/ReadVariableOp"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_2/control_dependency"
  op: "Identity"
  input: "save_2/Const"
  input: "^save_2/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_2/Const"
      }
    }
  }
}
node {
  name: "save_2/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: "first_bias/first_bias"
        string_val: "first_weights/first_weights"
        string_val: "global_step"
        string_val: "second_bias/second_bias"
        string_val: "second_weights/second_weights"
        string_val: "softmax_bias/softmax_bias"
        string_val: "softmax_weights/softmax_weights"
      }
    }
  }
}
node {
  name: "save_2/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_2/RestoreV2"
  op: "RestoreV2"
  input: "save_2/Const"
  input: "save_2/RestoreV2/tensor_names"
  input: "save_2/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_2/Identity"
  op: "Identity"
  input: "save_2/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp"
  op: "AssignVariableOp"
  input: "first_bias/first_bias"
  input: "save_2/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_1"
  op: "Identity"
  input: "save_2/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "first_weights/first_weights"
  input: "save_2/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_2"
  op: "Identity"
  input: "save_2/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save_2/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "global_step"
  input: "save_2/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save_2/Identity_3"
  op: "Identity"
  input: "save_2/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "second_bias/second_bias"
  input: "save_2/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_4"
  op: "Identity"
  input: "save_2/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "second_weights/second_weights"
  input: "save_2/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_5"
  op: "Identity"
  input: "save_2/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "softmax_bias/softmax_bias"
  input: "save_2/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/Identity_6"
  op: "Identity"
  input: "save_2/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "softmax_weights/softmax_weights"
  input: "save_2/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_2/restore_all"
  op: "NoOp"
  input: "^save_2/AssignVariableOp"
  input: "^save_2/AssignVariableOp_1"
  input: "^save_2/AssignVariableOp_2"
  input: "^save_2/AssignVariableOp_3"
  input: "^save_2/AssignVariableOp_4"
  input: "^save_2/AssignVariableOp_5"
  input: "^save_2/AssignVariableOp_6"
}
node {
  name: "groundtruth_input_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/xentropy/Shape"
  op: "Shape"
  input: "groundtruth_input_2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "add_2"
  input: "groundtruth_input_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/Const"
  input: "^cross_entropy_2/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/Const_1"
  op: "Const"
  input: "^cross_entropy_2/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/Sum"
  op: "Sum"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/Equal/y"
  op: "Const"
  input: "^cross_entropy_2/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/Equal"
  op: "Equal"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/Const"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/zeros_like"
  op: "Const"
  input: "^cross_entropy_2/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/ones_like/Shape"
  op: "Const"
  input: "^cross_entropy_2/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^cross_entropy_2/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/ones_like"
  op: "Fill"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/ones_like/Shape"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/Select"
  op: "Select"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/Equal"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/zeros_like"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^cross_entropy_2/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^cross_entropy_2/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "^cross_entropy_2/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^cross_entropy_2/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^cross_entropy_2/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "^cross_entropy_2/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^cross_entropy_2/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/Select"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/Const"
  op: "Const"
  input: "^cross_entropy_2/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present"
  op: "Sum"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/Rank"
  op: "Const"
  input: "^cross_entropy_2/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/range/start"
  op: "Const"
  input: "^cross_entropy_2/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/range/delta"
  op: "Const"
  input: "^cross_entropy_2/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/range"
  op: "Range"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/range/start"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/Rank"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/Sum_1"
  op: "Sum"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/Sum"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy_2/sparse_softmax_cross_entropy_loss/value"
  op: "DivNoNan"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/Sum_1"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "learning_rate_input_2"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "gradients_2/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients_2/Fill"
  op: "Fill"
  input: "gradients_2/Shape"
  input: "gradients_2/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/Shape"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "gradients_2/Fill"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/Sum"
  op: "Sum"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/Sum"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/Neg"
  op: "Neg"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/Neg"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_1"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/mul"
  op: "Mul"
  input: "gradients_2/Fill"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/mul"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/Sum_1"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
  input: "^gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
  input: "^gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
  input: "^gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Sum_1_grad/Tile"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Sum_grad/Shape"
  op: "Shape"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  op: "Tile"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  op: "Shape"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Shape"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  op: "Mul"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_2/zeros_like"
  op: "ZerosLike"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  op: "Mul"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  input: "cross_entropy_2/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/add_2_grad/Shape"
  op: "Shape"
  input: "MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/add_2_grad/Shape_1"
  op: "Shape"
  input: "add_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/add_2_grad/Shape"
  input: "gradients_2/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/add_2_grad/Sum"
  op: "Sum"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "gradients_2/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/add_2_grad/Sum"
  input: "gradients_2/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/cross_entropy_2/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "gradients_2/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/add_2_grad/Sum_1"
  input: "gradients_2/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/add_2_grad/Reshape"
  input: "^gradients_2/add_2_grad/Reshape_1"
}
node {
  name: "gradients_2/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/add_2_grad/Reshape"
  input: "^gradients_2/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_2/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/add_2_grad/Reshape_1"
  input: "^gradients_2/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_2/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_2/add_2_grad/tuple/control_dependency"
  input: "MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reshape_1"
  input: "gradients_2/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/MatMul_grad/MatMul"
  input: "^gradients_2/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_2/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/MatMul_grad/MatMul"
  input: "^gradients_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients_2/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/MatMul_grad/MatMul_1"
  input: "^gradients_2/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients_2/Reshape_1_grad/Shape"
  op: "Shape"
  input: "dropout_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/MatMul_grad/tuple/control_dependency"
  input: "gradients_2/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/dropout_1/Mul_grad/Shape"
  op: "Shape"
  input: "dropout_1/RealDiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/dropout_1/Mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/dropout_1/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/dropout_1/Mul_grad/Shape"
  input: "gradients_2/dropout_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/dropout_1/Mul_grad/Mul"
  op: "Mul"
  input: "gradients_2/Reshape_1_grad/Reshape"
  input: "dropout_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/dropout_1/Mul_grad/Sum"
  op: "Sum"
  input: "gradients_2/dropout_1/Mul_grad/Mul"
  input: "gradients_2/dropout_1/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/dropout_1/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/dropout_1/Mul_grad/Sum"
  input: "gradients_2/dropout_1/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/dropout_1/Mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_1/RealDiv"
  input: "gradients_2/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/dropout_1/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/dropout_1/Mul_grad/Mul_1"
  input: "gradients_2/dropout_1/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/dropout_1/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/dropout_1/Mul_grad/Sum_1"
  input: "gradients_2/dropout_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/dropout_1/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/dropout_1/Mul_grad/Reshape"
  input: "^gradients_2/dropout_1/Mul_grad/Reshape_1"
}
node {
  name: "gradients_2/dropout_1/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/dropout_1/Mul_grad/Reshape"
  input: "^gradients_2/dropout_1/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/dropout_1/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_2/dropout_1/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/dropout_1/Mul_grad/Reshape_1"
  input: "^gradients_2/dropout_1/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/dropout_1/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_2/dropout_1/RealDiv_grad/Shape"
  op: "Shape"
  input: "Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/dropout_1/RealDiv_grad/Shape_1"
  op: "Shape"
  input: "dropout_1/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/dropout_1/RealDiv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/dropout_1/RealDiv_grad/Shape"
  input: "gradients_2/dropout_1/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/dropout_1/RealDiv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients_2/dropout_1/Mul_grad/tuple/control_dependency"
  input: "dropout_1/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/dropout_1/RealDiv_grad/Sum"
  op: "Sum"
  input: "gradients_2/dropout_1/RealDiv_grad/RealDiv"
  input: "gradients_2/dropout_1/RealDiv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/dropout_1/RealDiv_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/dropout_1/RealDiv_grad/Sum"
  input: "gradients_2/dropout_1/RealDiv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/dropout_1/RealDiv_grad/Neg"
  op: "Neg"
  input: "Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/dropout_1/RealDiv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients_2/dropout_1/RealDiv_grad/Neg"
  input: "dropout_1/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/dropout_1/RealDiv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients_2/dropout_1/RealDiv_grad/RealDiv_1"
  input: "dropout_1/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/dropout_1/RealDiv_grad/mul"
  op: "Mul"
  input: "gradients_2/dropout_1/Mul_grad/tuple/control_dependency"
  input: "gradients_2/dropout_1/RealDiv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/dropout_1/RealDiv_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/dropout_1/RealDiv_grad/mul"
  input: "gradients_2/dropout_1/RealDiv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/dropout_1/RealDiv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/dropout_1/RealDiv_grad/Sum_1"
  input: "gradients_2/dropout_1/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/dropout_1/RealDiv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/dropout_1/RealDiv_grad/Reshape"
  input: "^gradients_2/dropout_1/RealDiv_grad/Reshape_1"
}
node {
  name: "gradients_2/dropout_1/RealDiv_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/dropout_1/RealDiv_grad/Reshape"
  input: "^gradients_2/dropout_1/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/dropout_1/RealDiv_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_2/dropout_1/RealDiv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/dropout_1/RealDiv_grad/Reshape_1"
  input: "^gradients_2/dropout_1/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/dropout_1/RealDiv_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_2/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_2/dropout_1/RealDiv_grad/tuple/control_dependency"
  input: "Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/add_1_grad/Shape"
  op: "Shape"
  input: "Conv2D_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/add_1_grad/Shape_1"
  op: "Shape"
  input: "add_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/add_1_grad/Shape"
  input: "gradients_2/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/add_1_grad/Sum"
  op: "Sum"
  input: "gradients_2/Relu_1_grad/ReluGrad"
  input: "gradients_2/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/add_1_grad/Sum"
  input: "gradients_2/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/Relu_1_grad/ReluGrad"
  input: "gradients_2/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/add_1_grad/Sum_1"
  input: "gradients_2/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/add_1_grad/Reshape"
  input: "^gradients_2/add_1_grad/Reshape_1"
}
node {
  name: "gradients_2/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/add_1_grad/Reshape"
  input: "^gradients_2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_2/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/add_1_grad/Reshape_1"
  input: "^gradients_2/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_2/Conv2D_1_grad/ShapeN"
  op: "ShapeN"
  input: "MaxPool2d"
  input: "Conv2D_1/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/Conv2D_1_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_2/Conv2D_1_grad/ShapeN"
  input: "Conv2D_1/ReadVariableOp"
  input: "gradients_2/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/Conv2D_1_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MaxPool2d"
  input: "gradients_2/Conv2D_1_grad/ShapeN:1"
  input: "gradients_2/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/Conv2D_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^gradients_2/Conv2D_1_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_2/Conv2D_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/Conv2D_1_grad/Conv2DBackpropInput"
  input: "^gradients_2/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/Conv2D_1_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients_2/Conv2D_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^gradients_2/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/Conv2D_1_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients_2/MaxPool2d_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "dropout/Mul"
  input: "MaxPool2d"
  input: "gradients_2/Conv2D_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients_2/dropout/Mul_grad/Shape"
  op: "Shape"
  input: "dropout/RealDiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/dropout/Mul_grad/Shape_1"
  op: "Shape"
  input: "dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/dropout/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/dropout/Mul_grad/Shape"
  input: "gradients_2/dropout/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/dropout/Mul_grad/Mul"
  op: "Mul"
  input: "gradients_2/MaxPool2d_grad/MaxPoolGrad"
  input: "dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/dropout/Mul_grad/Sum"
  op: "Sum"
  input: "gradients_2/dropout/Mul_grad/Mul"
  input: "gradients_2/dropout/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/dropout/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/dropout/Mul_grad/Sum"
  input: "gradients_2/dropout/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/dropout/Mul_grad/Mul_1"
  op: "Mul"
  input: "dropout/RealDiv"
  input: "gradients_2/MaxPool2d_grad/MaxPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/dropout/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/dropout/Mul_grad/Mul_1"
  input: "gradients_2/dropout/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/dropout/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/dropout/Mul_grad/Sum_1"
  input: "gradients_2/dropout/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/dropout/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/dropout/Mul_grad/Reshape"
  input: "^gradients_2/dropout/Mul_grad/Reshape_1"
}
node {
  name: "gradients_2/dropout/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/dropout/Mul_grad/Reshape"
  input: "^gradients_2/dropout/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/dropout/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_2/dropout/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/dropout/Mul_grad/Reshape_1"
  input: "^gradients_2/dropout/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/dropout/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_2/dropout/RealDiv_grad/Shape"
  op: "Shape"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/dropout/RealDiv_grad/Shape_1"
  op: "Shape"
  input: "dropout/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/dropout/RealDiv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/dropout/RealDiv_grad/Shape"
  input: "gradients_2/dropout/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/dropout/RealDiv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients_2/dropout/Mul_grad/tuple/control_dependency"
  input: "dropout/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/dropout/RealDiv_grad/Sum"
  op: "Sum"
  input: "gradients_2/dropout/RealDiv_grad/RealDiv"
  input: "gradients_2/dropout/RealDiv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/dropout/RealDiv_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/dropout/RealDiv_grad/Sum"
  input: "gradients_2/dropout/RealDiv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/dropout/RealDiv_grad/Neg"
  op: "Neg"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/dropout/RealDiv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients_2/dropout/RealDiv_grad/Neg"
  input: "dropout/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/dropout/RealDiv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients_2/dropout/RealDiv_grad/RealDiv_1"
  input: "dropout/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/dropout/RealDiv_grad/mul"
  op: "Mul"
  input: "gradients_2/dropout/Mul_grad/tuple/control_dependency"
  input: "gradients_2/dropout/RealDiv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/dropout/RealDiv_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/dropout/RealDiv_grad/mul"
  input: "gradients_2/dropout/RealDiv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/dropout/RealDiv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/dropout/RealDiv_grad/Sum_1"
  input: "gradients_2/dropout/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/dropout/RealDiv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/dropout/RealDiv_grad/Reshape"
  input: "^gradients_2/dropout/RealDiv_grad/Reshape_1"
}
node {
  name: "gradients_2/dropout/RealDiv_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/dropout/RealDiv_grad/Reshape"
  input: "^gradients_2/dropout/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/dropout/RealDiv_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_2/dropout/RealDiv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/dropout/RealDiv_grad/Reshape_1"
  input: "^gradients_2/dropout/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/dropout/RealDiv_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_2/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_2/dropout/RealDiv_grad/tuple/control_dependency"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_2/add_grad/Shape"
  op: "Shape"
  input: "Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/add_grad/Shape_1"
  op: "Shape"
  input: "add/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_2/add_grad/Shape"
  input: "gradients_2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/add_grad/Sum"
  op: "Sum"
  input: "gradients_2/Relu_grad/ReluGrad"
  input: "gradients_2/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_2/add_grad/Sum"
  input: "gradients_2/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/add_grad/Sum_1"
  op: "Sum"
  input: "gradients_2/Relu_grad/ReluGrad"
  input: "gradients_2/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_2/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_2/add_grad/Sum_1"
  input: "gradients_2/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/add_grad/Reshape"
  input: "^gradients_2/add_grad/Reshape_1"
}
node {
  name: "gradients_2/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/add_grad/Reshape"
  input: "^gradients_2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_2/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/add_grad/Reshape_1"
  input: "^gradients_2/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_2/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Reshape"
  input: "Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_2/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_2/Conv2D_grad/ShapeN"
  input: "Conv2D/ReadVariableOp"
  input: "gradients_2/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Reshape"
  input: "gradients_2/Conv2D_grad/ShapeN:1"
  input: "gradients_2/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_2/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients_2/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_2/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_2/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients_2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients_2/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_2/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients_2/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_2/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "GradientDescent_2/update_first_weights/first_weights/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "first_weights/first_weights"
  input: "learning_rate_input_2"
  input: "gradients_2/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@first_weights/first_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_2/update_first_bias/first_bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "first_bias/first_bias"
  input: "learning_rate_input_2"
  input: "gradients_2/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@first_bias/first_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_2/update_second_weights/second_weights/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "second_weights/second_weights"
  input: "learning_rate_input_2"
  input: "gradients_2/Conv2D_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@second_weights/second_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_2/update_second_bias/second_bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "second_bias/second_bias"
  input: "learning_rate_input_2"
  input: "gradients_2/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@second_bias/second_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_2/update_softmax_weights/softmax_weights/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "softmax_weights/softmax_weights"
  input: "learning_rate_input_2"
  input: "gradients_2/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_weights/softmax_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_2/update_softmax_bias/softmax_bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "softmax_bias/softmax_bias"
  input: "learning_rate_input_2"
  input: "gradients_2/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_bias/softmax_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_2"
  op: "NoOp"
  input: "^GradientDescent_2/update_first_bias/first_bias/ResourceApplyGradientDescent"
  input: "^GradientDescent_2/update_first_weights/first_weights/ResourceApplyGradientDescent"
  input: "^GradientDescent_2/update_second_bias/second_bias/ResourceApplyGradientDescent"
  input: "^GradientDescent_2/update_second_weights/second_weights/ResourceApplyGradientDescent"
  input: "^GradientDescent_2/update_softmax_bias/softmax_bias/ResourceApplyGradientDescent"
  input: "^GradientDescent_2/update_softmax_weights/softmax_weights/ResourceApplyGradientDescent"
}
node {
  name: "ArgMax_2/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax_2"
  op: "ArgMax"
  input: "add_2"
  input: "ArgMax_2/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Equal_2"
  op: "Equal"
  input: "ArgMax_2"
  input: "groundtruth_input_2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "Cast_3"
  op: "Cast"
  input: "Equal_2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Const_2"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_2"
  op: "Mean"
  input: "Cast_3"
  input: "Const_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "save_3/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_3/filename"
  op: "PlaceholderWithDefault"
  input: "save_3/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_3/Const"
  op: "PlaceholderWithDefault"
  input: "save_3/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_3/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: "first_bias/first_bias"
        string_val: "first_weights/first_weights"
        string_val: "global_step"
        string_val: "second_bias/second_bias"
        string_val: "second_weights/second_weights"
        string_val: "softmax_bias/softmax_bias"
        string_val: "softmax_weights/softmax_weights"
      }
    }
  }
}
node {
  name: "save_3/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_3/SaveV2"
  op: "SaveV2"
  input: "save_3/Const"
  input: "save_3/SaveV2/tensor_names"
  input: "save_3/SaveV2/shape_and_slices"
  input: "first_bias/first_bias/Read/ReadVariableOp"
  input: "first_weights/first_weights/Read/ReadVariableOp"
  input: "global_step/Read/ReadVariableOp"
  input: "second_bias/second_bias/Read/ReadVariableOp"
  input: "second_weights/second_weights/Read/ReadVariableOp"
  input: "softmax_bias/softmax_bias/Read/ReadVariableOp"
  input: "softmax_weights/softmax_weights/Read/ReadVariableOp"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_3/control_dependency"
  op: "Identity"
  input: "save_3/Const"
  input: "^save_3/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_3/Const"
      }
    }
  }
}
node {
  name: "save_3/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: "first_bias/first_bias"
        string_val: "first_weights/first_weights"
        string_val: "global_step"
        string_val: "second_bias/second_bias"
        string_val: "second_weights/second_weights"
        string_val: "softmax_bias/softmax_bias"
        string_val: "softmax_weights/softmax_weights"
      }
    }
  }
}
node {
  name: "save_3/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_3/RestoreV2"
  op: "RestoreV2"
  input: "save_3/Const"
  input: "save_3/RestoreV2/tensor_names"
  input: "save_3/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_3/Identity"
  op: "Identity"
  input: "save_3/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_3/AssignVariableOp"
  op: "AssignVariableOp"
  input: "first_bias/first_bias"
  input: "save_3/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_3/Identity_1"
  op: "Identity"
  input: "save_3/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_3/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "first_weights/first_weights"
  input: "save_3/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_3/Identity_2"
  op: "Identity"
  input: "save_3/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save_3/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "global_step"
  input: "save_3/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save_3/Identity_3"
  op: "Identity"
  input: "save_3/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_3/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "second_bias/second_bias"
  input: "save_3/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_3/Identity_4"
  op: "Identity"
  input: "save_3/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_3/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "second_weights/second_weights"
  input: "save_3/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_3/Identity_5"
  op: "Identity"
  input: "save_3/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_3/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "softmax_bias/softmax_bias"
  input: "save_3/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_3/Identity_6"
  op: "Identity"
  input: "save_3/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_3/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "softmax_weights/softmax_weights"
  input: "save_3/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_3/restore_all"
  op: "NoOp"
  input: "^save_3/AssignVariableOp"
  input: "^save_3/AssignVariableOp_1"
  input: "^save_3/AssignVariableOp_2"
  input: "^save_3/AssignVariableOp_3"
  input: "^save_3/AssignVariableOp_4"
  input: "^save_3/AssignVariableOp_5"
  input: "^save_3/AssignVariableOp_6"
}
node {
  name: "ReadVariableOp_4"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "add_5/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "add_5"
  op: "AddV2"
  input: "ReadVariableOp_4"
  input: "add_5/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "global_step"
  input: "add_5"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "ReadVariableOp_5"
  op: "ReadVariableOp"
  input: "global_step"
  input: "^AssignVariableOp_2"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "groundtruth_input_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/xentropy/Shape"
  op: "Shape"
  input: "groundtruth_input_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "add_2"
  input: "groundtruth_input_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/Const"
  input: "^cross_entropy_3/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/Const_1"
  op: "Const"
  input: "^cross_entropy_3/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/Sum"
  op: "Sum"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/Equal/y"
  op: "Const"
  input: "^cross_entropy_3/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/Equal"
  op: "Equal"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/Const"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/zeros_like"
  op: "Const"
  input: "^cross_entropy_3/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/ones_like/Shape"
  op: "Const"
  input: "^cross_entropy_3/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^cross_entropy_3/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/ones_like"
  op: "Fill"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/ones_like/Shape"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/Select"
  op: "Select"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/Equal"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/zeros_like"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^cross_entropy_3/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^cross_entropy_3/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "^cross_entropy_3/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^cross_entropy_3/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^cross_entropy_3/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "^cross_entropy_3/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^cross_entropy_3/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/Select"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/Const"
  op: "Const"
  input: "^cross_entropy_3/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present"
  op: "Sum"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/Rank"
  op: "Const"
  input: "^cross_entropy_3/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/range/start"
  op: "Const"
  input: "^cross_entropy_3/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/range/delta"
  op: "Const"
  input: "^cross_entropy_3/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/range"
  op: "Range"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/range/start"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/Rank"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/Sum_1"
  op: "Sum"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/Sum"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy_3/sparse_softmax_cross_entropy_loss/value"
  op: "DivNoNan"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/Sum_1"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "learning_rate_input_3"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "gradients_3/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_3/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients_3/Fill"
  op: "Fill"
  input: "gradients_3/Shape"
  input: "gradients_3/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/Shape"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "gradients_3/Fill"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/Sum"
  op: "Sum"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
  op: "Reshape"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/Sum"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/Neg"
  op: "Neg"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/Neg"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_1"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/mul"
  op: "Mul"
  input: "gradients_3/Fill"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/Sum_1"
  op: "Sum"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/mul"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/Sum_1"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
  input: "^gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
  input: "^gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
  input: "^gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Sum_1_grad/Tile"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Sum_grad/Shape"
  op: "Shape"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  op: "Tile"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  op: "Shape"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Shape"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  op: "Mul"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_3/zeros_like"
  op: "ZerosLike"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  op: "Mul"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  input: "cross_entropy_3/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_3/add_2_grad/Shape"
  op: "Shape"
  input: "MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/add_2_grad/Shape_1"
  op: "Shape"
  input: "add_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/add_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_3/add_2_grad/Shape"
  input: "gradients_3/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/add_2_grad/Sum"
  op: "Sum"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "gradients_3/add_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_3/add_2_grad/Reshape"
  op: "Reshape"
  input: "gradients_3/add_2_grad/Sum"
  input: "gradients_3/add_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/add_2_grad/Sum_1"
  op: "Sum"
  input: "gradients_3/cross_entropy_3/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "gradients_3/add_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_3/add_2_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_3/add_2_grad/Sum_1"
  input: "gradients_3/add_2_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/add_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_3/add_2_grad/Reshape"
  input: "^gradients_3/add_2_grad/Reshape_1"
}
node {
  name: "gradients_3/add_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_3/add_2_grad/Reshape"
  input: "^gradients_3/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_3/add_2_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_3/add_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_3/add_2_grad/Reshape_1"
  input: "^gradients_3/add_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_3/add_2_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_3/MatMul_grad/MatMul"
  op: "MatMul"
  input: "gradients_3/add_2_grad/tuple/control_dependency"
  input: "MatMul/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_3/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "Reshape_1"
  input: "gradients_3/add_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_3/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_3/MatMul_grad/MatMul"
  input: "^gradients_3/MatMul_grad/MatMul_1"
}
node {
  name: "gradients_3/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_3/MatMul_grad/MatMul"
  input: "^gradients_3/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_3/MatMul_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients_3/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_3/MatMul_grad/MatMul_1"
  input: "^gradients_3/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_3/MatMul_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients_3/Reshape_1_grad/Shape"
  op: "Shape"
  input: "dropout_1/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_3/MatMul_grad/tuple/control_dependency"
  input: "gradients_3/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/dropout_1/Mul_grad/Shape"
  op: "Shape"
  input: "dropout_1/RealDiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/dropout_1/Mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/dropout_1/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_3/dropout_1/Mul_grad/Shape"
  input: "gradients_3/dropout_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/dropout_1/Mul_grad/Mul"
  op: "Mul"
  input: "gradients_3/Reshape_1_grad/Reshape"
  input: "dropout_1/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_3/dropout_1/Mul_grad/Sum"
  op: "Sum"
  input: "gradients_3/dropout_1/Mul_grad/Mul"
  input: "gradients_3/dropout_1/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_3/dropout_1/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_3/dropout_1/Mul_grad/Sum"
  input: "gradients_3/dropout_1/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/dropout_1/Mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_1/RealDiv"
  input: "gradients_3/Reshape_1_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_3/dropout_1/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_3/dropout_1/Mul_grad/Mul_1"
  input: "gradients_3/dropout_1/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_3/dropout_1/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_3/dropout_1/Mul_grad/Sum_1"
  input: "gradients_3/dropout_1/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/dropout_1/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_3/dropout_1/Mul_grad/Reshape"
  input: "^gradients_3/dropout_1/Mul_grad/Reshape_1"
}
node {
  name: "gradients_3/dropout_1/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_3/dropout_1/Mul_grad/Reshape"
  input: "^gradients_3/dropout_1/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_3/dropout_1/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_3/dropout_1/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_3/dropout_1/Mul_grad/Reshape_1"
  input: "^gradients_3/dropout_1/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_3/dropout_1/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_3/dropout_1/RealDiv_grad/Shape"
  op: "Shape"
  input: "Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/dropout_1/RealDiv_grad/Shape_1"
  op: "Shape"
  input: "dropout_1/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/dropout_1/RealDiv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_3/dropout_1/RealDiv_grad/Shape"
  input: "gradients_3/dropout_1/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/dropout_1/RealDiv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients_3/dropout_1/Mul_grad/tuple/control_dependency"
  input: "dropout_1/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_3/dropout_1/RealDiv_grad/Sum"
  op: "Sum"
  input: "gradients_3/dropout_1/RealDiv_grad/RealDiv"
  input: "gradients_3/dropout_1/RealDiv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_3/dropout_1/RealDiv_grad/Reshape"
  op: "Reshape"
  input: "gradients_3/dropout_1/RealDiv_grad/Sum"
  input: "gradients_3/dropout_1/RealDiv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/dropout_1/RealDiv_grad/Neg"
  op: "Neg"
  input: "Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_3/dropout_1/RealDiv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients_3/dropout_1/RealDiv_grad/Neg"
  input: "dropout_1/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_3/dropout_1/RealDiv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients_3/dropout_1/RealDiv_grad/RealDiv_1"
  input: "dropout_1/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_3/dropout_1/RealDiv_grad/mul"
  op: "Mul"
  input: "gradients_3/dropout_1/Mul_grad/tuple/control_dependency"
  input: "gradients_3/dropout_1/RealDiv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_3/dropout_1/RealDiv_grad/Sum_1"
  op: "Sum"
  input: "gradients_3/dropout_1/RealDiv_grad/mul"
  input: "gradients_3/dropout_1/RealDiv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_3/dropout_1/RealDiv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_3/dropout_1/RealDiv_grad/Sum_1"
  input: "gradients_3/dropout_1/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/dropout_1/RealDiv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_3/dropout_1/RealDiv_grad/Reshape"
  input: "^gradients_3/dropout_1/RealDiv_grad/Reshape_1"
}
node {
  name: "gradients_3/dropout_1/RealDiv_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_3/dropout_1/RealDiv_grad/Reshape"
  input: "^gradients_3/dropout_1/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_3/dropout_1/RealDiv_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_3/dropout_1/RealDiv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_3/dropout_1/RealDiv_grad/Reshape_1"
  input: "^gradients_3/dropout_1/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_3/dropout_1/RealDiv_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_3/Relu_1_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_3/dropout_1/RealDiv_grad/tuple/control_dependency"
  input: "Relu_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_3/add_1_grad/Shape"
  op: "Shape"
  input: "Conv2D_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/add_1_grad/Shape_1"
  op: "Shape"
  input: "add_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/add_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_3/add_1_grad/Shape"
  input: "gradients_3/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/add_1_grad/Sum"
  op: "Sum"
  input: "gradients_3/Relu_1_grad/ReluGrad"
  input: "gradients_3/add_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_3/add_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_3/add_1_grad/Sum"
  input: "gradients_3/add_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/add_1_grad/Sum_1"
  op: "Sum"
  input: "gradients_3/Relu_1_grad/ReluGrad"
  input: "gradients_3/add_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_3/add_1_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_3/add_1_grad/Sum_1"
  input: "gradients_3/add_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/add_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_3/add_1_grad/Reshape"
  input: "^gradients_3/add_1_grad/Reshape_1"
}
node {
  name: "gradients_3/add_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_3/add_1_grad/Reshape"
  input: "^gradients_3/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_3/add_1_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_3/add_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_3/add_1_grad/Reshape_1"
  input: "^gradients_3/add_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_3/add_1_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_3/Conv2D_1_grad/ShapeN"
  op: "ShapeN"
  input: "MaxPool2d"
  input: "Conv2D_1/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/Conv2D_1_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_3/Conv2D_1_grad/ShapeN"
  input: "Conv2D_1/ReadVariableOp"
  input: "gradients_3/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_3/Conv2D_1_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MaxPool2d"
  input: "gradients_3/Conv2D_1_grad/ShapeN:1"
  input: "gradients_3/add_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_3/Conv2D_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_3/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^gradients_3/Conv2D_1_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_3/Conv2D_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_3/Conv2D_1_grad/Conv2DBackpropInput"
  input: "^gradients_3/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_3/Conv2D_1_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients_3/Conv2D_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_3/Conv2D_1_grad/Conv2DBackpropFilter"
  input: "^gradients_3/Conv2D_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_3/Conv2D_1_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients_3/MaxPool2d_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "dropout/Mul"
  input: "MaxPool2d"
  input: "gradients_3/Conv2D_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients_3/dropout/Mul_grad/Shape"
  op: "Shape"
  input: "dropout/RealDiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/dropout/Mul_grad/Shape_1"
  op: "Shape"
  input: "dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/dropout/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_3/dropout/Mul_grad/Shape"
  input: "gradients_3/dropout/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/dropout/Mul_grad/Mul"
  op: "Mul"
  input: "gradients_3/MaxPool2d_grad/MaxPoolGrad"
  input: "dropout/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_3/dropout/Mul_grad/Sum"
  op: "Sum"
  input: "gradients_3/dropout/Mul_grad/Mul"
  input: "gradients_3/dropout/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_3/dropout/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_3/dropout/Mul_grad/Sum"
  input: "gradients_3/dropout/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/dropout/Mul_grad/Mul_1"
  op: "Mul"
  input: "dropout/RealDiv"
  input: "gradients_3/MaxPool2d_grad/MaxPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_3/dropout/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_3/dropout/Mul_grad/Mul_1"
  input: "gradients_3/dropout/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_3/dropout/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_3/dropout/Mul_grad/Sum_1"
  input: "gradients_3/dropout/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/dropout/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_3/dropout/Mul_grad/Reshape"
  input: "^gradients_3/dropout/Mul_grad/Reshape_1"
}
node {
  name: "gradients_3/dropout/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_3/dropout/Mul_grad/Reshape"
  input: "^gradients_3/dropout/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_3/dropout/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_3/dropout/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_3/dropout/Mul_grad/Reshape_1"
  input: "^gradients_3/dropout/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_3/dropout/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_3/dropout/RealDiv_grad/Shape"
  op: "Shape"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/dropout/RealDiv_grad/Shape_1"
  op: "Shape"
  input: "dropout/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/dropout/RealDiv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_3/dropout/RealDiv_grad/Shape"
  input: "gradients_3/dropout/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/dropout/RealDiv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients_3/dropout/Mul_grad/tuple/control_dependency"
  input: "dropout/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_3/dropout/RealDiv_grad/Sum"
  op: "Sum"
  input: "gradients_3/dropout/RealDiv_grad/RealDiv"
  input: "gradients_3/dropout/RealDiv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_3/dropout/RealDiv_grad/Reshape"
  op: "Reshape"
  input: "gradients_3/dropout/RealDiv_grad/Sum"
  input: "gradients_3/dropout/RealDiv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/dropout/RealDiv_grad/Neg"
  op: "Neg"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_3/dropout/RealDiv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients_3/dropout/RealDiv_grad/Neg"
  input: "dropout/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_3/dropout/RealDiv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients_3/dropout/RealDiv_grad/RealDiv_1"
  input: "dropout/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_3/dropout/RealDiv_grad/mul"
  op: "Mul"
  input: "gradients_3/dropout/Mul_grad/tuple/control_dependency"
  input: "gradients_3/dropout/RealDiv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_3/dropout/RealDiv_grad/Sum_1"
  op: "Sum"
  input: "gradients_3/dropout/RealDiv_grad/mul"
  input: "gradients_3/dropout/RealDiv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_3/dropout/RealDiv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_3/dropout/RealDiv_grad/Sum_1"
  input: "gradients_3/dropout/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/dropout/RealDiv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_3/dropout/RealDiv_grad/Reshape"
  input: "^gradients_3/dropout/RealDiv_grad/Reshape_1"
}
node {
  name: "gradients_3/dropout/RealDiv_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_3/dropout/RealDiv_grad/Reshape"
  input: "^gradients_3/dropout/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_3/dropout/RealDiv_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_3/dropout/RealDiv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_3/dropout/RealDiv_grad/Reshape_1"
  input: "^gradients_3/dropout/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_3/dropout/RealDiv_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_3/Relu_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_3/dropout/RealDiv_grad/tuple/control_dependency"
  input: "Relu"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_3/add_grad/Shape"
  op: "Shape"
  input: "Conv2D"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/add_grad/Shape_1"
  op: "Shape"
  input: "add/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_3/add_grad/Shape"
  input: "gradients_3/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/add_grad/Sum"
  op: "Sum"
  input: "gradients_3/Relu_grad/ReluGrad"
  input: "gradients_3/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_3/add_grad/Reshape"
  op: "Reshape"
  input: "gradients_3/add_grad/Sum"
  input: "gradients_3/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/add_grad/Sum_1"
  op: "Sum"
  input: "gradients_3/Relu_grad/ReluGrad"
  input: "gradients_3/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_3/add_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_3/add_grad/Sum_1"
  input: "gradients_3/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_3/add_grad/Reshape"
  input: "^gradients_3/add_grad/Reshape_1"
}
node {
  name: "gradients_3/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_3/add_grad/Reshape"
  input: "^gradients_3/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_3/add_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_3/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_3/add_grad/Reshape_1"
  input: "^gradients_3/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_3/add_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_3/Conv2D_grad/ShapeN"
  op: "ShapeN"
  input: "Reshape"
  input: "Conv2D/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_3/Conv2D_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_3/Conv2D_grad/ShapeN"
  input: "Conv2D/ReadVariableOp"
  input: "gradients_3/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_3/Conv2D_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Reshape"
  input: "gradients_3/Conv2D_grad/ShapeN:1"
  input: "gradients_3/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_3/Conv2D_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients_3/Conv2D_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_3/Conv2D_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_3/Conv2D_grad/Conv2DBackpropInput"
  input: "^gradients_3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_3/Conv2D_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients_3/Conv2D_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_3/Conv2D_grad/Conv2DBackpropFilter"
  input: "^gradients_3/Conv2D_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_3/Conv2D_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "GradientDescent_3/update_first_weights/first_weights/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "first_weights/first_weights"
  input: "learning_rate_input_3"
  input: "gradients_3/Conv2D_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@first_weights/first_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_3/update_first_bias/first_bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "first_bias/first_bias"
  input: "learning_rate_input_3"
  input: "gradients_3/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@first_bias/first_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_3/update_second_weights/second_weights/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "second_weights/second_weights"
  input: "learning_rate_input_3"
  input: "gradients_3/Conv2D_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@second_weights/second_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_3/update_second_bias/second_bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "second_bias/second_bias"
  input: "learning_rate_input_3"
  input: "gradients_3/add_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@second_bias/second_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_3/update_softmax_weights/softmax_weights/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "softmax_weights/softmax_weights"
  input: "learning_rate_input_3"
  input: "gradients_3/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_weights/softmax_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_3/update_softmax_bias/softmax_bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "softmax_bias/softmax_bias"
  input: "learning_rate_input_3"
  input: "gradients_3/add_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_bias/softmax_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_3"
  op: "NoOp"
  input: "^GradientDescent_3/update_first_bias/first_bias/ResourceApplyGradientDescent"
  input: "^GradientDescent_3/update_first_weights/first_weights/ResourceApplyGradientDescent"
  input: "^GradientDescent_3/update_second_bias/second_bias/ResourceApplyGradientDescent"
  input: "^GradientDescent_3/update_second_weights/second_weights/ResourceApplyGradientDescent"
  input: "^GradientDescent_3/update_softmax_bias/softmax_bias/ResourceApplyGradientDescent"
  input: "^GradientDescent_3/update_softmax_weights/softmax_weights/ResourceApplyGradientDescent"
}
node {
  name: "ArgMax_3/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax_3"
  op: "ArgMax"
  input: "add_2"
  input: "ArgMax_3/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Equal_3"
  op: "Equal"
  input: "ArgMax_3"
  input: "groundtruth_input_3"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "Cast_4"
  op: "Cast"
  input: "Equal_3"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Const_3"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_3"
  op: "Mean"
  input: "Cast_4"
  input: "Const_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "save_4/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_4/filename"
  op: "PlaceholderWithDefault"
  input: "save_4/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_4/Const"
  op: "PlaceholderWithDefault"
  input: "save_4/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_4/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: "first_bias/first_bias"
        string_val: "first_weights/first_weights"
        string_val: "global_step"
        string_val: "second_bias/second_bias"
        string_val: "second_weights/second_weights"
        string_val: "softmax_bias/softmax_bias"
        string_val: "softmax_weights/softmax_weights"
      }
    }
  }
}
node {
  name: "save_4/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_4/SaveV2"
  op: "SaveV2"
  input: "save_4/Const"
  input: "save_4/SaveV2/tensor_names"
  input: "save_4/SaveV2/shape_and_slices"
  input: "first_bias/first_bias/Read/ReadVariableOp"
  input: "first_weights/first_weights/Read/ReadVariableOp"
  input: "global_step/Read/ReadVariableOp"
  input: "second_bias/second_bias/Read/ReadVariableOp"
  input: "second_weights/second_weights/Read/ReadVariableOp"
  input: "softmax_bias/softmax_bias/Read/ReadVariableOp"
  input: "softmax_weights/softmax_weights/Read/ReadVariableOp"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_4/control_dependency"
  op: "Identity"
  input: "save_4/Const"
  input: "^save_4/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_4/Const"
      }
    }
  }
}
node {
  name: "save_4/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: "first_bias/first_bias"
        string_val: "first_weights/first_weights"
        string_val: "global_step"
        string_val: "second_bias/second_bias"
        string_val: "second_weights/second_weights"
        string_val: "softmax_bias/softmax_bias"
        string_val: "softmax_weights/softmax_weights"
      }
    }
  }
}
node {
  name: "save_4/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_4/RestoreV2"
  op: "RestoreV2"
  input: "save_4/Const"
  input: "save_4/RestoreV2/tensor_names"
  input: "save_4/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_4/Identity"
  op: "Identity"
  input: "save_4/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_4/AssignVariableOp"
  op: "AssignVariableOp"
  input: "first_bias/first_bias"
  input: "save_4/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_4/Identity_1"
  op: "Identity"
  input: "save_4/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_4/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "first_weights/first_weights"
  input: "save_4/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_4/Identity_2"
  op: "Identity"
  input: "save_4/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save_4/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "global_step"
  input: "save_4/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save_4/Identity_3"
  op: "Identity"
  input: "save_4/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_4/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "second_bias/second_bias"
  input: "save_4/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_4/Identity_4"
  op: "Identity"
  input: "save_4/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_4/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "second_weights/second_weights"
  input: "save_4/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_4/Identity_5"
  op: "Identity"
  input: "save_4/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_4/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "softmax_bias/softmax_bias"
  input: "save_4/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_4/Identity_6"
  op: "Identity"
  input: "save_4/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_4/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "softmax_weights/softmax_weights"
  input: "save_4/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_4/restore_all"
  op: "NoOp"
  input: "^save_4/AssignVariableOp"
  input: "^save_4/AssignVariableOp_1"
  input: "^save_4/AssignVariableOp_2"
  input: "^save_4/AssignVariableOp_3"
  input: "^save_4/AssignVariableOp_4"
  input: "^save_4/AssignVariableOp_5"
  input: "^save_4/AssignVariableOp_6"
}
node {
  name: "ReadVariableOp_6"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "add_6/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "add_6"
  op: "AddV2"
  input: "ReadVariableOp_6"
  input: "add_6/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "global_step"
  input: "add_6"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "ReadVariableOp_7"
  op: "ReadVariableOp"
  input: "global_step"
  input: "^AssignVariableOp_3"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "dropout_rate_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "fingerprint_input_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 1960
        }
      }
    }
  }
}
node {
  name: "Reshape_3/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 4
          }
        }
        tensor_content: "\377\377\377\3771\000\000\000(\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "Reshape_3"
  op: "Reshape"
  input: "fingerprint_input_1"
  input: "Reshape_3/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Conv2D_2/ReadVariableOp"
  op: "ReadVariableOp"
  input: "first_weights/first_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_2"
  op: "Conv2D"
  input: "Reshape_3"
  input: "Conv2D_2/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_7/ReadVariableOp"
  op: "ReadVariableOp"
  input: "first_bias/first_bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_7"
  op: "AddV2"
  input: "Conv2D_2"
  input: "add_7/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_2"
  op: "Relu"
  input: "add_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_2/Sub"
  op: "Sub"
  input: "dropout_2/Const"
  input: "dropout_rate_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/RealDiv"
  op: "RealDiv"
  input: "Relu_2"
  input: "dropout_2/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/Shape"
  op: "Shape"
  input: "Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_2/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_2/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_2/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_2/random_uniform/RandomUniform"
  input: "dropout_rate_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_2/Cast"
  op: "Cast"
  input: "dropout_2/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_2/Mul"
  op: "Mul"
  input: "dropout_2/RealDiv"
  input: "dropout_2/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MaxPool2d_1"
  op: "MaxPool"
  input: "dropout_2/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "Conv2D_3/ReadVariableOp"
  op: "ReadVariableOp"
  input: "second_weights/second_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Conv2D_3"
  op: "Conv2D"
  input: "MaxPool2d_1"
  input: "Conv2D_3/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "add_8/ReadVariableOp"
  op: "ReadVariableOp"
  input: "second_bias/second_bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_8"
  op: "AddV2"
  input: "Conv2D_3"
  input: "add_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Relu_3"
  op: "Relu"
  input: "add_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "dropout_3/Sub"
  op: "Sub"
  input: "dropout_3/Const"
  input: "dropout_rate_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/RealDiv"
  op: "RealDiv"
  input: "Relu_3"
  input: "dropout_3/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/Shape"
  op: "Shape"
  input: "Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "dropout_3/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "dropout_3/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "dropout_3/GreaterEqual"
  op: "GreaterEqual"
  input: "dropout_3/random_uniform/RandomUniform"
  input: "dropout_rate_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "dropout_3/Cast"
  op: "Cast"
  input: "dropout_3/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "dropout_3/Mul"
  op: "Mul"
  input: "dropout_3/RealDiv"
  input: "dropout_3/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Reshape_4/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\000}\000\000"
      }
    }
  }
}
node {
  name: "Reshape_4"
  op: "Reshape"
  input: "dropout_3/Mul"
  input: "Reshape_4/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "MatMul_1/ReadVariableOp"
  op: "ReadVariableOp"
  input: "softmax_weights/softmax_weights"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "MatMul_1"
  op: "MatMul"
  input: "Reshape_4"
  input: "MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "add_9/ReadVariableOp"
  op: "ReadVariableOp"
  input: "softmax_bias/softmax_bias"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "add_9"
  op: "AddV2"
  input: "MatMul_1"
  input: "add_9/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "wav_name_1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "reader_reader_1"
  op: "ReadFile"
  input: "wav_name_1"
}
node {
  name: "wav_decoder_1"
  op: "DecodeWav"
  input: "reader_reader_1"
  attr {
    key: "desired_channels"
    value {
      i: 1
    }
  }
  attr {
    key: "desired_samples"
    value {
      i: 16000
    }
  }
}
node {
  name: "Mul_2/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 32768.0
      }
    }
  }
}
node {
  name: "Mul_2"
  op: "Mul"
  input: "wav_decoder_1"
  input: "Mul_2/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Cast_5"
  op: "Cast"
  input: "Mul_2"
  attr {
    key: "DstT"
    value {
      type: DT_INT16
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Reshape_5/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "Reshape_5"
  op: "Reshape"
  input: "Cast_5"
  input: "Reshape_5/shape"
  attr {
    key: "T"
    value {
      type: DT_INT16
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "AudioMicrofrontend_1"
  op: "AudioMicrofrontend"
  input: "Reshape_5"
  attr {
    key: "enable_log"
    value {
      b: true
    }
  }
  attr {
    key: "enable_pcan"
    value {
      b: true
    }
  }
  attr {
    key: "even_smoothing"
    value {
      f: 0.02500000037252903
    }
  }
  attr {
    key: "frame_stride"
    value {
      i: 1
    }
  }
  attr {
    key: "gain_bits"
    value {
      i: 21
    }
  }
  attr {
    key: "left_context"
    value {
      i: 0
    }
  }
  attr {
    key: "lower_band_limit"
    value {
      f: 125.0
    }
  }
  attr {
    key: "min_signal_remaining"
    value {
      f: 0.05000000074505806
    }
  }
  attr {
    key: "num_channels"
    value {
      i: 40
    }
  }
  attr {
    key: "odd_smoothing"
    value {
      f: 0.05999999865889549
    }
  }
  attr {
    key: "out_scale"
    value {
      i: 1
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "pcan_offset"
    value {
      f: 80.0
    }
  }
  attr {
    key: "pcan_strength"
    value {
      f: 0.949999988079071
    }
  }
  attr {
    key: "right_context"
    value {
      i: 0
    }
  }
  attr {
    key: "sample_rate"
    value {
      i: 16000
    }
  }
  attr {
    key: "scale_shift"
    value {
      i: 6
    }
  }
  attr {
    key: "smoothing_bits"
    value {
      i: 10
    }
  }
  attr {
    key: "upper_band_limit"
    value {
      f: 7500.0
    }
  }
  attr {
    key: "window_size"
    value {
      i: 30
    }
  }
  attr {
    key: "window_step"
    value {
      i: 20
    }
  }
  attr {
    key: "zero_padding"
    value {
      b: false
    }
  }
}
node {
  name: "Mul_3/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0390625
      }
    }
  }
}
node {
  name: "Mul_3"
  op: "Mul"
  input: "AudioMicrofrontend_1"
  input: "Mul_3/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "groundtruth_input_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/xentropy/Shape"
  op: "Shape"
  input: "groundtruth_input_4"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "add_9"
  input: "groundtruth_input_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/Const"
  input: "^cross_entropy_4/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/Const_1"
  op: "Const"
  input: "^cross_entropy_4/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/Sum"
  op: "Sum"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/Equal/y"
  op: "Const"
  input: "^cross_entropy_4/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/Equal"
  op: "Equal"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/Const"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/zeros_like"
  op: "Const"
  input: "^cross_entropy_4/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/ones_like/Shape"
  op: "Const"
  input: "^cross_entropy_4/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^cross_entropy_4/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/ones_like"
  op: "Fill"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/ones_like/Shape"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/Select"
  op: "Select"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/Equal"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/zeros_like"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^cross_entropy_4/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^cross_entropy_4/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "^cross_entropy_4/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^cross_entropy_4/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^cross_entropy_4/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "^cross_entropy_4/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^cross_entropy_4/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/Select"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/Const"
  op: "Const"
  input: "^cross_entropy_4/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present"
  op: "Sum"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/Rank"
  op: "Const"
  input: "^cross_entropy_4/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/range/start"
  op: "Const"
  input: "^cross_entropy_4/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/range/delta"
  op: "Const"
  input: "^cross_entropy_4/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/range"
  op: "Range"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/range/start"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/Rank"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/Sum_1"
  op: "Sum"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/Sum"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy_4/sparse_softmax_cross_entropy_loss/value"
  op: "DivNoNan"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/Sum_1"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "learning_rate_input_4"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "gradients_4/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_4/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients_4/Fill"
  op: "Fill"
  input: "gradients_4/Shape"
  input: "gradients_4/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/Shape"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "gradients_4/Fill"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/Sum"
  op: "Sum"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
  op: "Reshape"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/Sum"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/Neg"
  op: "Neg"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/Neg"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_1"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/mul"
  op: "Mul"
  input: "gradients_4/Fill"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/Sum_1"
  op: "Sum"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/mul"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/Sum_1"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
  input: "^gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
  input: "^gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
  input: "^gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Sum_1_grad/Tile"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Sum_grad/Shape"
  op: "Shape"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  op: "Tile"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  op: "Shape"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Shape"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  op: "Mul"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_4/zeros_like"
  op: "ZerosLike"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  op: "Mul"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  input: "cross_entropy_4/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_4/add_9_grad/Shape"
  op: "Shape"
  input: "MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/add_9_grad/Shape_1"
  op: "Shape"
  input: "add_9/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/add_9_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_4/add_9_grad/Shape"
  input: "gradients_4/add_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/add_9_grad/Sum"
  op: "Sum"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "gradients_4/add_9_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_4/add_9_grad/Reshape"
  op: "Reshape"
  input: "gradients_4/add_9_grad/Sum"
  input: "gradients_4/add_9_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/add_9_grad/Sum_1"
  op: "Sum"
  input: "gradients_4/cross_entropy_4/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "gradients_4/add_9_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_4/add_9_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_4/add_9_grad/Sum_1"
  input: "gradients_4/add_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/add_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_4/add_9_grad/Reshape"
  input: "^gradients_4/add_9_grad/Reshape_1"
}
node {
  name: "gradients_4/add_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_4/add_9_grad/Reshape"
  input: "^gradients_4/add_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_4/add_9_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_4/add_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_4/add_9_grad/Reshape_1"
  input: "^gradients_4/add_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_4/add_9_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_4/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients_4/add_9_grad/tuple/control_dependency"
  input: "MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_4/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "Reshape_4"
  input: "gradients_4/add_9_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_4/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_4/MatMul_1_grad/MatMul"
  input: "^gradients_4/MatMul_1_grad/MatMul_1"
}
node {
  name: "gradients_4/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_4/MatMul_1_grad/MatMul"
  input: "^gradients_4/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_4/MatMul_1_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients_4/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_4/MatMul_1_grad/MatMul_1"
  input: "^gradients_4/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_4/MatMul_1_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients_4/Reshape_4_grad/Shape"
  op: "Shape"
  input: "dropout_3/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/Reshape_4_grad/Reshape"
  op: "Reshape"
  input: "gradients_4/MatMul_1_grad/tuple/control_dependency"
  input: "gradients_4/Reshape_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/dropout_3/Mul_grad/Shape"
  op: "Shape"
  input: "dropout_3/RealDiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/dropout_3/Mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_3/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/dropout_3/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_4/dropout_3/Mul_grad/Shape"
  input: "gradients_4/dropout_3/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/dropout_3/Mul_grad/Mul"
  op: "Mul"
  input: "gradients_4/Reshape_4_grad/Reshape"
  input: "dropout_3/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_4/dropout_3/Mul_grad/Sum"
  op: "Sum"
  input: "gradients_4/dropout_3/Mul_grad/Mul"
  input: "gradients_4/dropout_3/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_4/dropout_3/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_4/dropout_3/Mul_grad/Sum"
  input: "gradients_4/dropout_3/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/dropout_3/Mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_3/RealDiv"
  input: "gradients_4/Reshape_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_4/dropout_3/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_4/dropout_3/Mul_grad/Mul_1"
  input: "gradients_4/dropout_3/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_4/dropout_3/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_4/dropout_3/Mul_grad/Sum_1"
  input: "gradients_4/dropout_3/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/dropout_3/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_4/dropout_3/Mul_grad/Reshape"
  input: "^gradients_4/dropout_3/Mul_grad/Reshape_1"
}
node {
  name: "gradients_4/dropout_3/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_4/dropout_3/Mul_grad/Reshape"
  input: "^gradients_4/dropout_3/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_4/dropout_3/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_4/dropout_3/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_4/dropout_3/Mul_grad/Reshape_1"
  input: "^gradients_4/dropout_3/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_4/dropout_3/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_4/dropout_3/RealDiv_grad/Shape"
  op: "Shape"
  input: "Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/dropout_3/RealDiv_grad/Shape_1"
  op: "Shape"
  input: "dropout_3/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/dropout_3/RealDiv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_4/dropout_3/RealDiv_grad/Shape"
  input: "gradients_4/dropout_3/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/dropout_3/RealDiv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients_4/dropout_3/Mul_grad/tuple/control_dependency"
  input: "dropout_3/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_4/dropout_3/RealDiv_grad/Sum"
  op: "Sum"
  input: "gradients_4/dropout_3/RealDiv_grad/RealDiv"
  input: "gradients_4/dropout_3/RealDiv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_4/dropout_3/RealDiv_grad/Reshape"
  op: "Reshape"
  input: "gradients_4/dropout_3/RealDiv_grad/Sum"
  input: "gradients_4/dropout_3/RealDiv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/dropout_3/RealDiv_grad/Neg"
  op: "Neg"
  input: "Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_4/dropout_3/RealDiv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients_4/dropout_3/RealDiv_grad/Neg"
  input: "dropout_3/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_4/dropout_3/RealDiv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients_4/dropout_3/RealDiv_grad/RealDiv_1"
  input: "dropout_3/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_4/dropout_3/RealDiv_grad/mul"
  op: "Mul"
  input: "gradients_4/dropout_3/Mul_grad/tuple/control_dependency"
  input: "gradients_4/dropout_3/RealDiv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_4/dropout_3/RealDiv_grad/Sum_1"
  op: "Sum"
  input: "gradients_4/dropout_3/RealDiv_grad/mul"
  input: "gradients_4/dropout_3/RealDiv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_4/dropout_3/RealDiv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_4/dropout_3/RealDiv_grad/Sum_1"
  input: "gradients_4/dropout_3/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/dropout_3/RealDiv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_4/dropout_3/RealDiv_grad/Reshape"
  input: "^gradients_4/dropout_3/RealDiv_grad/Reshape_1"
}
node {
  name: "gradients_4/dropout_3/RealDiv_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_4/dropout_3/RealDiv_grad/Reshape"
  input: "^gradients_4/dropout_3/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_4/dropout_3/RealDiv_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_4/dropout_3/RealDiv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_4/dropout_3/RealDiv_grad/Reshape_1"
  input: "^gradients_4/dropout_3/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_4/dropout_3/RealDiv_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_4/Relu_3_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_4/dropout_3/RealDiv_grad/tuple/control_dependency"
  input: "Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_4/add_8_grad/Shape"
  op: "Shape"
  input: "Conv2D_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/add_8_grad/Shape_1"
  op: "Shape"
  input: "add_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/add_8_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_4/add_8_grad/Shape"
  input: "gradients_4/add_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/add_8_grad/Sum"
  op: "Sum"
  input: "gradients_4/Relu_3_grad/ReluGrad"
  input: "gradients_4/add_8_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_4/add_8_grad/Reshape"
  op: "Reshape"
  input: "gradients_4/add_8_grad/Sum"
  input: "gradients_4/add_8_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/add_8_grad/Sum_1"
  op: "Sum"
  input: "gradients_4/Relu_3_grad/ReluGrad"
  input: "gradients_4/add_8_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_4/add_8_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_4/add_8_grad/Sum_1"
  input: "gradients_4/add_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/add_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_4/add_8_grad/Reshape"
  input: "^gradients_4/add_8_grad/Reshape_1"
}
node {
  name: "gradients_4/add_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_4/add_8_grad/Reshape"
  input: "^gradients_4/add_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_4/add_8_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_4/add_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_4/add_8_grad/Reshape_1"
  input: "^gradients_4/add_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_4/add_8_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_4/Conv2D_3_grad/ShapeN"
  op: "ShapeN"
  input: "MaxPool2d_1"
  input: "Conv2D_3/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/Conv2D_3_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_4/Conv2D_3_grad/ShapeN"
  input: "Conv2D_3/ReadVariableOp"
  input: "gradients_4/add_8_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_4/Conv2D_3_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MaxPool2d_1"
  input: "gradients_4/Conv2D_3_grad/ShapeN:1"
  input: "gradients_4/add_8_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_4/Conv2D_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_4/Conv2D_3_grad/Conv2DBackpropFilter"
  input: "^gradients_4/Conv2D_3_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_4/Conv2D_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_4/Conv2D_3_grad/Conv2DBackpropInput"
  input: "^gradients_4/Conv2D_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_4/Conv2D_3_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients_4/Conv2D_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_4/Conv2D_3_grad/Conv2DBackpropFilter"
  input: "^gradients_4/Conv2D_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_4/Conv2D_3_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients_4/MaxPool2d_1_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "dropout_2/Mul"
  input: "MaxPool2d_1"
  input: "gradients_4/Conv2D_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients_4/dropout_2/Mul_grad/Shape"
  op: "Shape"
  input: "dropout_2/RealDiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/dropout_2/Mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_2/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/dropout_2/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_4/dropout_2/Mul_grad/Shape"
  input: "gradients_4/dropout_2/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/dropout_2/Mul_grad/Mul"
  op: "Mul"
  input: "gradients_4/MaxPool2d_1_grad/MaxPoolGrad"
  input: "dropout_2/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_4/dropout_2/Mul_grad/Sum"
  op: "Sum"
  input: "gradients_4/dropout_2/Mul_grad/Mul"
  input: "gradients_4/dropout_2/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_4/dropout_2/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_4/dropout_2/Mul_grad/Sum"
  input: "gradients_4/dropout_2/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/dropout_2/Mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_2/RealDiv"
  input: "gradients_4/MaxPool2d_1_grad/MaxPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_4/dropout_2/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_4/dropout_2/Mul_grad/Mul_1"
  input: "gradients_4/dropout_2/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_4/dropout_2/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_4/dropout_2/Mul_grad/Sum_1"
  input: "gradients_4/dropout_2/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/dropout_2/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_4/dropout_2/Mul_grad/Reshape"
  input: "^gradients_4/dropout_2/Mul_grad/Reshape_1"
}
node {
  name: "gradients_4/dropout_2/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_4/dropout_2/Mul_grad/Reshape"
  input: "^gradients_4/dropout_2/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_4/dropout_2/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_4/dropout_2/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_4/dropout_2/Mul_grad/Reshape_1"
  input: "^gradients_4/dropout_2/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_4/dropout_2/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_4/dropout_2/RealDiv_grad/Shape"
  op: "Shape"
  input: "Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/dropout_2/RealDiv_grad/Shape_1"
  op: "Shape"
  input: "dropout_2/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/dropout_2/RealDiv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_4/dropout_2/RealDiv_grad/Shape"
  input: "gradients_4/dropout_2/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/dropout_2/RealDiv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients_4/dropout_2/Mul_grad/tuple/control_dependency"
  input: "dropout_2/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_4/dropout_2/RealDiv_grad/Sum"
  op: "Sum"
  input: "gradients_4/dropout_2/RealDiv_grad/RealDiv"
  input: "gradients_4/dropout_2/RealDiv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_4/dropout_2/RealDiv_grad/Reshape"
  op: "Reshape"
  input: "gradients_4/dropout_2/RealDiv_grad/Sum"
  input: "gradients_4/dropout_2/RealDiv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/dropout_2/RealDiv_grad/Neg"
  op: "Neg"
  input: "Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_4/dropout_2/RealDiv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients_4/dropout_2/RealDiv_grad/Neg"
  input: "dropout_2/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_4/dropout_2/RealDiv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients_4/dropout_2/RealDiv_grad/RealDiv_1"
  input: "dropout_2/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_4/dropout_2/RealDiv_grad/mul"
  op: "Mul"
  input: "gradients_4/dropout_2/Mul_grad/tuple/control_dependency"
  input: "gradients_4/dropout_2/RealDiv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_4/dropout_2/RealDiv_grad/Sum_1"
  op: "Sum"
  input: "gradients_4/dropout_2/RealDiv_grad/mul"
  input: "gradients_4/dropout_2/RealDiv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_4/dropout_2/RealDiv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_4/dropout_2/RealDiv_grad/Sum_1"
  input: "gradients_4/dropout_2/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/dropout_2/RealDiv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_4/dropout_2/RealDiv_grad/Reshape"
  input: "^gradients_4/dropout_2/RealDiv_grad/Reshape_1"
}
node {
  name: "gradients_4/dropout_2/RealDiv_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_4/dropout_2/RealDiv_grad/Reshape"
  input: "^gradients_4/dropout_2/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_4/dropout_2/RealDiv_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_4/dropout_2/RealDiv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_4/dropout_2/RealDiv_grad/Reshape_1"
  input: "^gradients_4/dropout_2/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_4/dropout_2/RealDiv_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_4/Relu_2_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_4/dropout_2/RealDiv_grad/tuple/control_dependency"
  input: "Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_4/add_7_grad/Shape"
  op: "Shape"
  input: "Conv2D_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/add_7_grad/Shape_1"
  op: "Shape"
  input: "add_7/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/add_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_4/add_7_grad/Shape"
  input: "gradients_4/add_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/add_7_grad/Sum"
  op: "Sum"
  input: "gradients_4/Relu_2_grad/ReluGrad"
  input: "gradients_4/add_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_4/add_7_grad/Reshape"
  op: "Reshape"
  input: "gradients_4/add_7_grad/Sum"
  input: "gradients_4/add_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/add_7_grad/Sum_1"
  op: "Sum"
  input: "gradients_4/Relu_2_grad/ReluGrad"
  input: "gradients_4/add_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_4/add_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_4/add_7_grad/Sum_1"
  input: "gradients_4/add_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/add_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_4/add_7_grad/Reshape"
  input: "^gradients_4/add_7_grad/Reshape_1"
}
node {
  name: "gradients_4/add_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_4/add_7_grad/Reshape"
  input: "^gradients_4/add_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_4/add_7_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_4/add_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_4/add_7_grad/Reshape_1"
  input: "^gradients_4/add_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_4/add_7_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_4/Conv2D_2_grad/ShapeN"
  op: "ShapeN"
  input: "Reshape_3"
  input: "Conv2D_2/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_4/Conv2D_2_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_4/Conv2D_2_grad/ShapeN"
  input: "Conv2D_2/ReadVariableOp"
  input: "gradients_4/add_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_4/Conv2D_2_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Reshape_3"
  input: "gradients_4/Conv2D_2_grad/ShapeN:1"
  input: "gradients_4/add_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_4/Conv2D_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_4/Conv2D_2_grad/Conv2DBackpropFilter"
  input: "^gradients_4/Conv2D_2_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_4/Conv2D_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_4/Conv2D_2_grad/Conv2DBackpropInput"
  input: "^gradients_4/Conv2D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_4/Conv2D_2_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients_4/Conv2D_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_4/Conv2D_2_grad/Conv2DBackpropFilter"
  input: "^gradients_4/Conv2D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_4/Conv2D_2_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "GradientDescent_4/update_first_weights/first_weights/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "first_weights/first_weights"
  input: "learning_rate_input_4"
  input: "gradients_4/Conv2D_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@first_weights/first_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_4/update_first_bias/first_bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "first_bias/first_bias"
  input: "learning_rate_input_4"
  input: "gradients_4/add_7_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@first_bias/first_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_4/update_second_weights/second_weights/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "second_weights/second_weights"
  input: "learning_rate_input_4"
  input: "gradients_4/Conv2D_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@second_weights/second_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_4/update_second_bias/second_bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "second_bias/second_bias"
  input: "learning_rate_input_4"
  input: "gradients_4/add_8_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@second_bias/second_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_4/update_softmax_weights/softmax_weights/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "softmax_weights/softmax_weights"
  input: "learning_rate_input_4"
  input: "gradients_4/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_weights/softmax_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_4/update_softmax_bias/softmax_bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "softmax_bias/softmax_bias"
  input: "learning_rate_input_4"
  input: "gradients_4/add_9_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_bias/softmax_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_4"
  op: "NoOp"
  input: "^GradientDescent_4/update_first_bias/first_bias/ResourceApplyGradientDescent"
  input: "^GradientDescent_4/update_first_weights/first_weights/ResourceApplyGradientDescent"
  input: "^GradientDescent_4/update_second_bias/second_bias/ResourceApplyGradientDescent"
  input: "^GradientDescent_4/update_second_weights/second_weights/ResourceApplyGradientDescent"
  input: "^GradientDescent_4/update_softmax_bias/softmax_bias/ResourceApplyGradientDescent"
  input: "^GradientDescent_4/update_softmax_weights/softmax_weights/ResourceApplyGradientDescent"
}
node {
  name: "ArgMax_4/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax_4"
  op: "ArgMax"
  input: "add_9"
  input: "ArgMax_4/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Equal_4"
  op: "Equal"
  input: "ArgMax_4"
  input: "groundtruth_input_4"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "Cast_6"
  op: "Cast"
  input: "Equal_4"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Const_4"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_4"
  op: "Mean"
  input: "Cast_6"
  input: "Const_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "save_5/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_5/filename"
  op: "PlaceholderWithDefault"
  input: "save_5/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_5/Const"
  op: "PlaceholderWithDefault"
  input: "save_5/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_5/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: "first_bias/first_bias"
        string_val: "first_weights/first_weights"
        string_val: "global_step"
        string_val: "second_bias/second_bias"
        string_val: "second_weights/second_weights"
        string_val: "softmax_bias/softmax_bias"
        string_val: "softmax_weights/softmax_weights"
      }
    }
  }
}
node {
  name: "save_5/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_5/SaveV2"
  op: "SaveV2"
  input: "save_5/Const"
  input: "save_5/SaveV2/tensor_names"
  input: "save_5/SaveV2/shape_and_slices"
  input: "first_bias/first_bias/Read/ReadVariableOp"
  input: "first_weights/first_weights/Read/ReadVariableOp"
  input: "global_step/Read/ReadVariableOp"
  input: "second_bias/second_bias/Read/ReadVariableOp"
  input: "second_weights/second_weights/Read/ReadVariableOp"
  input: "softmax_bias/softmax_bias/Read/ReadVariableOp"
  input: "softmax_weights/softmax_weights/Read/ReadVariableOp"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_5/control_dependency"
  op: "Identity"
  input: "save_5/Const"
  input: "^save_5/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_5/Const"
      }
    }
  }
}
node {
  name: "save_5/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: "first_bias/first_bias"
        string_val: "first_weights/first_weights"
        string_val: "global_step"
        string_val: "second_bias/second_bias"
        string_val: "second_weights/second_weights"
        string_val: "softmax_bias/softmax_bias"
        string_val: "softmax_weights/softmax_weights"
      }
    }
  }
}
node {
  name: "save_5/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_5/RestoreV2"
  op: "RestoreV2"
  input: "save_5/Const"
  input: "save_5/RestoreV2/tensor_names"
  input: "save_5/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_5/Identity"
  op: "Identity"
  input: "save_5/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_5/AssignVariableOp"
  op: "AssignVariableOp"
  input: "first_bias/first_bias"
  input: "save_5/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_5/Identity_1"
  op: "Identity"
  input: "save_5/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_5/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "first_weights/first_weights"
  input: "save_5/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_5/Identity_2"
  op: "Identity"
  input: "save_5/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save_5/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "global_step"
  input: "save_5/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save_5/Identity_3"
  op: "Identity"
  input: "save_5/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_5/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "second_bias/second_bias"
  input: "save_5/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_5/Identity_4"
  op: "Identity"
  input: "save_5/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_5/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "second_weights/second_weights"
  input: "save_5/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_5/Identity_5"
  op: "Identity"
  input: "save_5/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_5/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "softmax_bias/softmax_bias"
  input: "save_5/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_5/Identity_6"
  op: "Identity"
  input: "save_5/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_5/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "softmax_weights/softmax_weights"
  input: "save_5/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_5/restore_all"
  op: "NoOp"
  input: "^save_5/AssignVariableOp"
  input: "^save_5/AssignVariableOp_1"
  input: "^save_5/AssignVariableOp_2"
  input: "^save_5/AssignVariableOp_3"
  input: "^save_5/AssignVariableOp_4"
  input: "^save_5/AssignVariableOp_5"
  input: "^save_5/AssignVariableOp_6"
}
node {
  name: "init_2"
  op: "NoOp"
  input: "^first_bias/first_bias/Assign"
  input: "^first_weights/first_weights/Assign"
  input: "^global_step/Assign"
  input: "^second_bias/second_bias/Assign"
  input: "^second_weights/second_weights/Assign"
  input: "^softmax_bias/softmax_bias/Assign"
  input: "^softmax_weights/softmax_weights/Assign"
}
node {
  name: "ReadVariableOp_8"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "add_10/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "add_10"
  op: "AddV2"
  input: "ReadVariableOp_8"
  input: "add_10/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "global_step"
  input: "add_10"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "ReadVariableOp_9"
  op: "ReadVariableOp"
  input: "global_step"
  input: "^AssignVariableOp_4"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "groundtruth_input_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/xentropy/Shape"
  op: "Shape"
  input: "groundtruth_input_5"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "add_9"
  input: "groundtruth_input_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/assert_broadcastable/weights/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/shape"
  op: "Shape"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/assert_broadcastable/values/rank"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul"
  op: "Mul"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/Const"
  input: "^cross_entropy_5/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/Const_1"
  op: "Const"
  input: "^cross_entropy_5/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/Sum"
  op: "Sum"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/Equal/y"
  op: "Const"
  input: "^cross_entropy_5/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/Equal"
  op: "Equal"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/Const"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/zeros_like"
  op: "Const"
  input: "^cross_entropy_5/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/ones_like/Shape"
  op: "Const"
  input: "^cross_entropy_5/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/ones_like/Const"
  op: "Const"
  input: "^cross_entropy_5/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/ones_like"
  op: "Fill"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/ones_like/Shape"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/Select"
  op: "Select"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/Equal"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/zeros_like"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/shape"
  op: "Const"
  input: "^cross_entropy_5/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/weights/rank"
  op: "Const"
  input: "^cross_entropy_5/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/shape"
  op: "Shape"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "^cross_entropy_5/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/values/rank"
  op: "Const"
  input: "^cross_entropy_5/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  op: "NoOp"
  input: "^cross_entropy_5/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  op: "Shape"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "^cross_entropy_5/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  op: "Const"
  input: "^cross_entropy_5/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  input: "^cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  op: "Fill"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Shape"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights"
  op: "Mul"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/Select"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights/ones_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/Const"
  op: "Const"
  input: "^cross_entropy_5/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present"
  op: "Sum"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/broadcast_weights"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/Rank"
  op: "Const"
  input: "^cross_entropy_5/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/range/start"
  op: "Const"
  input: "^cross_entropy_5/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/range/delta"
  op: "Const"
  input: "^cross_entropy_5/sparse_softmax_cross_entropy_loss/assert_broadcastable/static_scalar_check_success"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/range"
  op: "Range"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/range/start"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/Rank"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/Sum_1"
  op: "Sum"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/Sum"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/range"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "cross_entropy_5/sparse_softmax_cross_entropy_loss/value"
  op: "DivNoNan"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/Sum_1"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "learning_rate_input_5"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "gradients_5/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_5/grad_ys_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "gradients_5/Fill"
  op: "Fill"
  input: "gradients_5/Shape"
  input: "gradients_5/grad_ys_0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/Shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/Shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/Shape"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan"
  op: "DivNoNan"
  input: "gradients_5/Fill"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/Sum"
  op: "Sum"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
  op: "Reshape"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/Sum"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/Neg"
  op: "Neg"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_1"
  op: "DivNoNan"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/Neg"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_2"
  op: "DivNoNan"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_1"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/num_present"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/mul"
  op: "Mul"
  input: "gradients_5/Fill"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/div_no_nan_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/Sum_1"
  op: "Sum"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/mul"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/Sum_1"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
  input: "^gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
  input: "^gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
  input: "^gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape_1"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  op: "Reshape"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/value_grad/tuple/control_dependency"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape/shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Sum_1_grad/Const"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Sum_1_grad/Tile"
  op: "Tile"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Sum_1_grad/Reshape"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Sum_1_grad/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape"
  op: "Reshape"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Sum_1_grad/Tile"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Sum_grad/Shape"
  op: "Shape"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  op: "Tile"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Sum_grad/Reshape"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Sum_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  op: "Shape"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  op: "Shape"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  op: "Mul"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  op: "Sum"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/Mul"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/Sum"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  op: "Mul"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/xentropy/xentropy"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Sum_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/Mul_1"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/Sum_1"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
  input: "^gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
  input: "^gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_5/zeros_like"
  op: "ZerosLike"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  op: "ExpandDims"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/Mul_grad/tuple/control_dependency"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  op: "Mul"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/ExpandDims"
  input: "cross_entropy_5/sparse_softmax_cross_entropy_loss/xentropy/xentropy:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_5/add_9_grad/Shape"
  op: "Shape"
  input: "MatMul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/add_9_grad/Shape_1"
  op: "Shape"
  input: "add_9/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/add_9_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_5/add_9_grad/Shape"
  input: "gradients_5/add_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/add_9_grad/Sum"
  op: "Sum"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "gradients_5/add_9_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_5/add_9_grad/Reshape"
  op: "Reshape"
  input: "gradients_5/add_9_grad/Sum"
  input: "gradients_5/add_9_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/add_9_grad/Sum_1"
  op: "Sum"
  input: "gradients_5/cross_entropy_5/sparse_softmax_cross_entropy_loss/xentropy/xentropy_grad/mul"
  input: "gradients_5/add_9_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_5/add_9_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_5/add_9_grad/Sum_1"
  input: "gradients_5/add_9_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/add_9_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_5/add_9_grad/Reshape"
  input: "^gradients_5/add_9_grad/Reshape_1"
}
node {
  name: "gradients_5/add_9_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_5/add_9_grad/Reshape"
  input: "^gradients_5/add_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_5/add_9_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_5/add_9_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_5/add_9_grad/Reshape_1"
  input: "^gradients_5/add_9_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_5/add_9_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_5/MatMul_1_grad/MatMul"
  op: "MatMul"
  input: "gradients_5/add_9_grad/tuple/control_dependency"
  input: "MatMul_1/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_5/MatMul_1_grad/MatMul_1"
  op: "MatMul"
  input: "Reshape_4"
  input: "gradients_5/add_9_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_5/MatMul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_5/MatMul_1_grad/MatMul"
  input: "^gradients_5/MatMul_1_grad/MatMul_1"
}
node {
  name: "gradients_5/MatMul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_5/MatMul_1_grad/MatMul"
  input: "^gradients_5/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_5/MatMul_1_grad/MatMul"
      }
    }
  }
}
node {
  name: "gradients_5/MatMul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_5/MatMul_1_grad/MatMul_1"
  input: "^gradients_5/MatMul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_5/MatMul_1_grad/MatMul_1"
      }
    }
  }
}
node {
  name: "gradients_5/Reshape_4_grad/Shape"
  op: "Shape"
  input: "dropout_3/Mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/Reshape_4_grad/Reshape"
  op: "Reshape"
  input: "gradients_5/MatMul_1_grad/tuple/control_dependency"
  input: "gradients_5/Reshape_4_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/dropout_3/Mul_grad/Shape"
  op: "Shape"
  input: "dropout_3/RealDiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/dropout_3/Mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_3/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/dropout_3/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_5/dropout_3/Mul_grad/Shape"
  input: "gradients_5/dropout_3/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/dropout_3/Mul_grad/Mul"
  op: "Mul"
  input: "gradients_5/Reshape_4_grad/Reshape"
  input: "dropout_3/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_5/dropout_3/Mul_grad/Sum"
  op: "Sum"
  input: "gradients_5/dropout_3/Mul_grad/Mul"
  input: "gradients_5/dropout_3/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_5/dropout_3/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_5/dropout_3/Mul_grad/Sum"
  input: "gradients_5/dropout_3/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/dropout_3/Mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_3/RealDiv"
  input: "gradients_5/Reshape_4_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_5/dropout_3/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_5/dropout_3/Mul_grad/Mul_1"
  input: "gradients_5/dropout_3/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_5/dropout_3/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_5/dropout_3/Mul_grad/Sum_1"
  input: "gradients_5/dropout_3/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/dropout_3/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_5/dropout_3/Mul_grad/Reshape"
  input: "^gradients_5/dropout_3/Mul_grad/Reshape_1"
}
node {
  name: "gradients_5/dropout_3/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_5/dropout_3/Mul_grad/Reshape"
  input: "^gradients_5/dropout_3/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_5/dropout_3/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_5/dropout_3/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_5/dropout_3/Mul_grad/Reshape_1"
  input: "^gradients_5/dropout_3/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_5/dropout_3/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_5/dropout_3/RealDiv_grad/Shape"
  op: "Shape"
  input: "Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/dropout_3/RealDiv_grad/Shape_1"
  op: "Shape"
  input: "dropout_3/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/dropout_3/RealDiv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_5/dropout_3/RealDiv_grad/Shape"
  input: "gradients_5/dropout_3/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/dropout_3/RealDiv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients_5/dropout_3/Mul_grad/tuple/control_dependency"
  input: "dropout_3/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_5/dropout_3/RealDiv_grad/Sum"
  op: "Sum"
  input: "gradients_5/dropout_3/RealDiv_grad/RealDiv"
  input: "gradients_5/dropout_3/RealDiv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_5/dropout_3/RealDiv_grad/Reshape"
  op: "Reshape"
  input: "gradients_5/dropout_3/RealDiv_grad/Sum"
  input: "gradients_5/dropout_3/RealDiv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/dropout_3/RealDiv_grad/Neg"
  op: "Neg"
  input: "Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_5/dropout_3/RealDiv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients_5/dropout_3/RealDiv_grad/Neg"
  input: "dropout_3/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_5/dropout_3/RealDiv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients_5/dropout_3/RealDiv_grad/RealDiv_1"
  input: "dropout_3/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_5/dropout_3/RealDiv_grad/mul"
  op: "Mul"
  input: "gradients_5/dropout_3/Mul_grad/tuple/control_dependency"
  input: "gradients_5/dropout_3/RealDiv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_5/dropout_3/RealDiv_grad/Sum_1"
  op: "Sum"
  input: "gradients_5/dropout_3/RealDiv_grad/mul"
  input: "gradients_5/dropout_3/RealDiv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_5/dropout_3/RealDiv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_5/dropout_3/RealDiv_grad/Sum_1"
  input: "gradients_5/dropout_3/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/dropout_3/RealDiv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_5/dropout_3/RealDiv_grad/Reshape"
  input: "^gradients_5/dropout_3/RealDiv_grad/Reshape_1"
}
node {
  name: "gradients_5/dropout_3/RealDiv_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_5/dropout_3/RealDiv_grad/Reshape"
  input: "^gradients_5/dropout_3/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_5/dropout_3/RealDiv_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_5/dropout_3/RealDiv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_5/dropout_3/RealDiv_grad/Reshape_1"
  input: "^gradients_5/dropout_3/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_5/dropout_3/RealDiv_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_5/Relu_3_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_5/dropout_3/RealDiv_grad/tuple/control_dependency"
  input: "Relu_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_5/add_8_grad/Shape"
  op: "Shape"
  input: "Conv2D_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/add_8_grad/Shape_1"
  op: "Shape"
  input: "add_8/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/add_8_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_5/add_8_grad/Shape"
  input: "gradients_5/add_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/add_8_grad/Sum"
  op: "Sum"
  input: "gradients_5/Relu_3_grad/ReluGrad"
  input: "gradients_5/add_8_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_5/add_8_grad/Reshape"
  op: "Reshape"
  input: "gradients_5/add_8_grad/Sum"
  input: "gradients_5/add_8_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/add_8_grad/Sum_1"
  op: "Sum"
  input: "gradients_5/Relu_3_grad/ReluGrad"
  input: "gradients_5/add_8_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_5/add_8_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_5/add_8_grad/Sum_1"
  input: "gradients_5/add_8_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/add_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_5/add_8_grad/Reshape"
  input: "^gradients_5/add_8_grad/Reshape_1"
}
node {
  name: "gradients_5/add_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_5/add_8_grad/Reshape"
  input: "^gradients_5/add_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_5/add_8_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_5/add_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_5/add_8_grad/Reshape_1"
  input: "^gradients_5/add_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_5/add_8_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_5/Conv2D_3_grad/ShapeN"
  op: "ShapeN"
  input: "MaxPool2d_1"
  input: "Conv2D_3/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/Conv2D_3_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_5/Conv2D_3_grad/ShapeN"
  input: "Conv2D_3/ReadVariableOp"
  input: "gradients_5/add_8_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_5/Conv2D_3_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "MaxPool2d_1"
  input: "gradients_5/Conv2D_3_grad/ShapeN:1"
  input: "gradients_5/add_8_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_5/Conv2D_3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_5/Conv2D_3_grad/Conv2DBackpropFilter"
  input: "^gradients_5/Conv2D_3_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_5/Conv2D_3_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_5/Conv2D_3_grad/Conv2DBackpropInput"
  input: "^gradients_5/Conv2D_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_5/Conv2D_3_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients_5/Conv2D_3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_5/Conv2D_3_grad/Conv2DBackpropFilter"
  input: "^gradients_5/Conv2D_3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_5/Conv2D_3_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "gradients_5/MaxPool2d_1_grad/MaxPoolGrad"
  op: "MaxPoolGrad"
  input: "dropout_2/Mul"
  input: "MaxPool2d_1"
  input: "gradients_5/Conv2D_3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "ksize"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 2
        i: 2
        i: 1
      }
    }
  }
}
node {
  name: "gradients_5/dropout_2/Mul_grad/Shape"
  op: "Shape"
  input: "dropout_2/RealDiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/dropout_2/Mul_grad/Shape_1"
  op: "Shape"
  input: "dropout_2/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/dropout_2/Mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_5/dropout_2/Mul_grad/Shape"
  input: "gradients_5/dropout_2/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/dropout_2/Mul_grad/Mul"
  op: "Mul"
  input: "gradients_5/MaxPool2d_1_grad/MaxPoolGrad"
  input: "dropout_2/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_5/dropout_2/Mul_grad/Sum"
  op: "Sum"
  input: "gradients_5/dropout_2/Mul_grad/Mul"
  input: "gradients_5/dropout_2/Mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_5/dropout_2/Mul_grad/Reshape"
  op: "Reshape"
  input: "gradients_5/dropout_2/Mul_grad/Sum"
  input: "gradients_5/dropout_2/Mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/dropout_2/Mul_grad/Mul_1"
  op: "Mul"
  input: "dropout_2/RealDiv"
  input: "gradients_5/MaxPool2d_1_grad/MaxPoolGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_5/dropout_2/Mul_grad/Sum_1"
  op: "Sum"
  input: "gradients_5/dropout_2/Mul_grad/Mul_1"
  input: "gradients_5/dropout_2/Mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_5/dropout_2/Mul_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_5/dropout_2/Mul_grad/Sum_1"
  input: "gradients_5/dropout_2/Mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/dropout_2/Mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_5/dropout_2/Mul_grad/Reshape"
  input: "^gradients_5/dropout_2/Mul_grad/Reshape_1"
}
node {
  name: "gradients_5/dropout_2/Mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_5/dropout_2/Mul_grad/Reshape"
  input: "^gradients_5/dropout_2/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_5/dropout_2/Mul_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_5/dropout_2/Mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_5/dropout_2/Mul_grad/Reshape_1"
  input: "^gradients_5/dropout_2/Mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_5/dropout_2/Mul_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_5/dropout_2/RealDiv_grad/Shape"
  op: "Shape"
  input: "Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/dropout_2/RealDiv_grad/Shape_1"
  op: "Shape"
  input: "dropout_2/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/dropout_2/RealDiv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_5/dropout_2/RealDiv_grad/Shape"
  input: "gradients_5/dropout_2/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/dropout_2/RealDiv_grad/RealDiv"
  op: "RealDiv"
  input: "gradients_5/dropout_2/Mul_grad/tuple/control_dependency"
  input: "dropout_2/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_5/dropout_2/RealDiv_grad/Sum"
  op: "Sum"
  input: "gradients_5/dropout_2/RealDiv_grad/RealDiv"
  input: "gradients_5/dropout_2/RealDiv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_5/dropout_2/RealDiv_grad/Reshape"
  op: "Reshape"
  input: "gradients_5/dropout_2/RealDiv_grad/Sum"
  input: "gradients_5/dropout_2/RealDiv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/dropout_2/RealDiv_grad/Neg"
  op: "Neg"
  input: "Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_5/dropout_2/RealDiv_grad/RealDiv_1"
  op: "RealDiv"
  input: "gradients_5/dropout_2/RealDiv_grad/Neg"
  input: "dropout_2/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_5/dropout_2/RealDiv_grad/RealDiv_2"
  op: "RealDiv"
  input: "gradients_5/dropout_2/RealDiv_grad/RealDiv_1"
  input: "dropout_2/Sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_5/dropout_2/RealDiv_grad/mul"
  op: "Mul"
  input: "gradients_5/dropout_2/Mul_grad/tuple/control_dependency"
  input: "gradients_5/dropout_2/RealDiv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_5/dropout_2/RealDiv_grad/Sum_1"
  op: "Sum"
  input: "gradients_5/dropout_2/RealDiv_grad/mul"
  input: "gradients_5/dropout_2/RealDiv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_5/dropout_2/RealDiv_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_5/dropout_2/RealDiv_grad/Sum_1"
  input: "gradients_5/dropout_2/RealDiv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/dropout_2/RealDiv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_5/dropout_2/RealDiv_grad/Reshape"
  input: "^gradients_5/dropout_2/RealDiv_grad/Reshape_1"
}
node {
  name: "gradients_5/dropout_2/RealDiv_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_5/dropout_2/RealDiv_grad/Reshape"
  input: "^gradients_5/dropout_2/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_5/dropout_2/RealDiv_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_5/dropout_2/RealDiv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_5/dropout_2/RealDiv_grad/Reshape_1"
  input: "^gradients_5/dropout_2/RealDiv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_5/dropout_2/RealDiv_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_5/Relu_2_grad/ReluGrad"
  op: "ReluGrad"
  input: "gradients_5/dropout_2/RealDiv_grad/tuple/control_dependency"
  input: "Relu_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "gradients_5/add_7_grad/Shape"
  op: "Shape"
  input: "Conv2D_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/add_7_grad/Shape_1"
  op: "Shape"
  input: "add_7/ReadVariableOp"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/add_7_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "gradients_5/add_7_grad/Shape"
  input: "gradients_5/add_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/add_7_grad/Sum"
  op: "Sum"
  input: "gradients_5/Relu_2_grad/ReluGrad"
  input: "gradients_5/add_7_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_5/add_7_grad/Reshape"
  op: "Reshape"
  input: "gradients_5/add_7_grad/Sum"
  input: "gradients_5/add_7_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/add_7_grad/Sum_1"
  op: "Sum"
  input: "gradients_5/Relu_2_grad/ReluGrad"
  input: "gradients_5/add_7_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "gradients_5/add_7_grad/Reshape_1"
  op: "Reshape"
  input: "gradients_5/add_7_grad/Sum_1"
  input: "gradients_5/add_7_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/add_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_5/add_7_grad/Reshape"
  input: "^gradients_5/add_7_grad/Reshape_1"
}
node {
  name: "gradients_5/add_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_5/add_7_grad/Reshape"
  input: "^gradients_5/add_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_5/add_7_grad/Reshape"
      }
    }
  }
}
node {
  name: "gradients_5/add_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_5/add_7_grad/Reshape_1"
  input: "^gradients_5/add_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_5/add_7_grad/Reshape_1"
      }
    }
  }
}
node {
  name: "gradients_5/Conv2D_2_grad/ShapeN"
  op: "ShapeN"
  input: "Reshape_3"
  input: "Conv2D_2/ReadVariableOp"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "gradients_5/Conv2D_2_grad/Conv2DBackpropInput"
  op: "Conv2DBackpropInput"
  input: "gradients_5/Conv2D_2_grad/ShapeN"
  input: "Conv2D_2/ReadVariableOp"
  input: "gradients_5/add_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_5/Conv2D_2_grad/Conv2DBackpropFilter"
  op: "Conv2DBackpropFilter"
  input: "Reshape_3"
  input: "gradients_5/Conv2D_2_grad/ShapeN:1"
  input: "gradients_5/add_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
  attr {
    key: "dilations"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "explicit_paddings"
    value {
      list {
      }
    }
  }
  attr {
    key: "padding"
    value {
      s: "SAME"
    }
  }
  attr {
    key: "strides"
    value {
      list {
        i: 1
        i: 1
        i: 1
        i: 1
      }
    }
  }
  attr {
    key: "use_cudnn_on_gpu"
    value {
      b: true
    }
  }
}
node {
  name: "gradients_5/Conv2D_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^gradients_5/Conv2D_2_grad/Conv2DBackpropFilter"
  input: "^gradients_5/Conv2D_2_grad/Conv2DBackpropInput"
}
node {
  name: "gradients_5/Conv2D_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "gradients_5/Conv2D_2_grad/Conv2DBackpropInput"
  input: "^gradients_5/Conv2D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_5/Conv2D_2_grad/Conv2DBackpropInput"
      }
    }
  }
}
node {
  name: "gradients_5/Conv2D_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "gradients_5/Conv2D_2_grad/Conv2DBackpropFilter"
  input: "^gradients_5/Conv2D_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@gradients_5/Conv2D_2_grad/Conv2DBackpropFilter"
      }
    }
  }
}
node {
  name: "GradientDescent_5/update_first_weights/first_weights/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "first_weights/first_weights"
  input: "learning_rate_input_5"
  input: "gradients_5/Conv2D_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@first_weights/first_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_5/update_first_bias/first_bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "first_bias/first_bias"
  input: "learning_rate_input_5"
  input: "gradients_5/add_7_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@first_bias/first_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_5/update_second_weights/second_weights/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "second_weights/second_weights"
  input: "learning_rate_input_5"
  input: "gradients_5/Conv2D_3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@second_weights/second_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_5/update_second_bias/second_bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "second_bias/second_bias"
  input: "learning_rate_input_5"
  input: "gradients_5/add_8_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@second_bias/second_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_5/update_softmax_weights/softmax_weights/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "softmax_weights/softmax_weights"
  input: "learning_rate_input_5"
  input: "gradients_5/MatMul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_weights/softmax_weights"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_5/update_softmax_bias/softmax_bias/ResourceApplyGradientDescent"
  op: "ResourceApplyGradientDescent"
  input: "softmax_bias/softmax_bias"
  input: "learning_rate_input_5"
  input: "gradients_5/add_9_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@softmax_bias/softmax_bias"
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "GradientDescent_5"
  op: "NoOp"
  input: "^GradientDescent_5/update_first_bias/first_bias/ResourceApplyGradientDescent"
  input: "^GradientDescent_5/update_first_weights/first_weights/ResourceApplyGradientDescent"
  input: "^GradientDescent_5/update_second_bias/second_bias/ResourceApplyGradientDescent"
  input: "^GradientDescent_5/update_second_weights/second_weights/ResourceApplyGradientDescent"
  input: "^GradientDescent_5/update_softmax_bias/softmax_bias/ResourceApplyGradientDescent"
  input: "^GradientDescent_5/update_softmax_weights/softmax_weights/ResourceApplyGradientDescent"
}
node {
  name: "ArgMax_5/dimension"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "ArgMax_5"
  op: "ArgMax"
  input: "add_9"
  input: "ArgMax_5/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "Equal_5"
  op: "Equal"
  input: "ArgMax_5"
  input: "groundtruth_input_5"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "incompatible_shape_error"
    value {
      b: true
    }
  }
}
node {
  name: "Cast_7"
  op: "Cast"
  input: "Equal_5"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Truncate"
    value {
      b: false
    }
  }
}
node {
  name: "Const_5"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Mean_5"
  op: "Mean"
  input: "Cast_7"
  input: "Const_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "save_6/filename/input"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save_6/filename"
  op: "PlaceholderWithDefault"
  input: "save_6/filename/input"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_6/Const"
  op: "PlaceholderWithDefault"
  input: "save_6/filename"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
}
node {
  name: "save_6/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: "first_bias/first_bias"
        string_val: "first_weights/first_weights"
        string_val: "global_step"
        string_val: "second_bias/second_bias"
        string_val: "second_weights/second_weights"
        string_val: "softmax_bias/softmax_bias"
        string_val: "softmax_weights/softmax_weights"
      }
    }
  }
}
node {
  name: "save_6/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_6/SaveV2"
  op: "SaveV2"
  input: "save_6/Const"
  input: "save_6/SaveV2/tensor_names"
  input: "save_6/SaveV2/shape_and_slices"
  input: "first_bias/first_bias/Read/ReadVariableOp"
  input: "first_weights/first_weights/Read/ReadVariableOp"
  input: "global_step/Read/ReadVariableOp"
  input: "second_bias/second_bias/Read/ReadVariableOp"
  input: "second_weights/second_weights/Read/ReadVariableOp"
  input: "softmax_bias/softmax_bias/Read/ReadVariableOp"
  input: "softmax_weights/softmax_weights/Read/ReadVariableOp"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_6/control_dependency"
  op: "Identity"
  input: "save_6/Const"
  input: "^save_6/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save_6/Const"
      }
    }
  }
}
node {
  name: "save_6/RestoreV2/tensor_names"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: "first_bias/first_bias"
        string_val: "first_weights/first_weights"
        string_val: "global_step"
        string_val: "second_bias/second_bias"
        string_val: "second_weights/second_weights"
        string_val: "softmax_bias/softmax_bias"
        string_val: "softmax_weights/softmax_weights"
      }
    }
  }
}
node {
  name: "save_6/RestoreV2/shape_and_slices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 7
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save_6/RestoreV2"
  op: "RestoreV2"
  input: "save_6/Const"
  input: "save_6/RestoreV2/tensor_names"
  input: "save_6/RestoreV2/shape_and_slices"
  device: "/device:CPU:0"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save_6/Identity"
  op: "Identity"
  input: "save_6/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_6/AssignVariableOp"
  op: "AssignVariableOp"
  input: "first_bias/first_bias"
  input: "save_6/Identity"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_6/Identity_1"
  op: "Identity"
  input: "save_6/RestoreV2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_6/AssignVariableOp_1"
  op: "AssignVariableOp"
  input: "first_weights/first_weights"
  input: "save_6/Identity_1"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_6/Identity_2"
  op: "Identity"
  input: "save_6/RestoreV2:2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save_6/AssignVariableOp_2"
  op: "AssignVariableOp"
  input: "global_step"
  input: "save_6/Identity_2"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "save_6/Identity_3"
  op: "Identity"
  input: "save_6/RestoreV2:3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_6/AssignVariableOp_3"
  op: "AssignVariableOp"
  input: "second_bias/second_bias"
  input: "save_6/Identity_3"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_6/Identity_4"
  op: "Identity"
  input: "save_6/RestoreV2:4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_6/AssignVariableOp_4"
  op: "AssignVariableOp"
  input: "second_weights/second_weights"
  input: "save_6/Identity_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_6/Identity_5"
  op: "Identity"
  input: "save_6/RestoreV2:5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_6/AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "softmax_bias/softmax_bias"
  input: "save_6/Identity_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_6/Identity_6"
  op: "Identity"
  input: "save_6/RestoreV2:6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_6/AssignVariableOp_6"
  op: "AssignVariableOp"
  input: "softmax_weights/softmax_weights"
  input: "save_6/Identity_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "save_6/restore_all"
  op: "NoOp"
  input: "^save_6/AssignVariableOp"
  input: "^save_6/AssignVariableOp_1"
  input: "^save_6/AssignVariableOp_2"
  input: "^save_6/AssignVariableOp_3"
  input: "^save_6/AssignVariableOp_4"
  input: "^save_6/AssignVariableOp_5"
  input: "^save_6/AssignVariableOp_6"
}
node {
  name: "init_3"
  op: "NoOp"
  input: "^first_bias/first_bias/Assign"
  input: "^first_weights/first_weights/Assign"
  input: "^global_step/Assign"
  input: "^second_bias/second_bias/Assign"
  input: "^second_weights/second_weights/Assign"
  input: "^softmax_bias/softmax_bias/Assign"
  input: "^softmax_weights/softmax_weights/Assign"
}
node {
  name: "ReadVariableOp_10"
  op: "ReadVariableOp"
  input: "global_step"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "add_11/y"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "add_11"
  op: "AddV2"
  input: "ReadVariableOp_10"
  input: "add_11/y"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "AssignVariableOp_5"
  op: "AssignVariableOp"
  input: "global_step"
  input: "add_11"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "ReadVariableOp_11"
  op: "ReadVariableOp"
  input: "global_step"
  input: "^AssignVariableOp_5"
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
versions {
  producer: 561
}
